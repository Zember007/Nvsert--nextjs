{"code":"/**\r\n * 获取接触边缘类型\r\n */\r\nexport const getReachType = (initialTouchState, horizontalCloseEdge, verticalCloseEdge, reachPosition) => {\r\n    if ((horizontalCloseEdge && initialTouchState === 1) || reachPosition === 'x') {\r\n        return 'x';\r\n    }\r\n    if ((verticalCloseEdge && initialTouchState > 1) || reachPosition === 'y') {\r\n        return 'y';\r\n    }\r\n    return undefined;\r\n};\r\n/**\r\n * 计算接触边缘位置\r\n * @param position - x/y\r\n * @param scale\r\n * @param size - width/height\r\n * @param innerSize - innerWidth/innerHeight\r\n * @return [CloseEdgeType, position]\r\n */\r\nexport const computePositionEdge = (position, scale, size, innerSize) => {\r\n    const currentWidth = size * scale;\r\n    // 图片超出的宽度\r\n    const outOffset = (currentWidth - innerSize) / 2;\r\n    let closedEdge;\r\n    let current = position;\r\n    if (currentWidth <= innerSize) {\r\n        closedEdge = 1;\r\n        current = 0;\r\n    }\r\n    else if (position > 0 && outOffset - position <= 0) {\r\n        closedEdge = 2;\r\n        current = outOffset;\r\n    }\r\n    else if (position < 0 && outOffset + position <= 0) {\r\n        closedEdge = 3;\r\n        current = -outOffset;\r\n    }\r\n    return [closedEdge, current];\r\n};\r\n//# sourceMappingURL=edgeHandle.js.map","references":["/Users/georgiiborisov/Documents/Nvsert--nextjs/src/assets/lib/react-photo-view/src/types.ts"],"map":"{\"version\":3,\"file\":\"edgeHandle.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/utils/edgeHandle.ts\"],\"names\":[],\"mappings\":\"AAEA;;GAEG;AACH,MAAM,CAAC,MAAM,YAAY,GAAG,CAC1B,iBAAiC,EACjC,mBAAkC,EAClC,iBAAgC,EAChC,aAAwB,EACb,EAAE;IACb,IAAI,CAAC,mBAAmB,IAAI,iBAAiB,KAAK,CAAC,CAAC,IAAI,aAAa,KAAK,GAAG,EAAE;QAC7E,OAAO,GAAG,CAAC;KACZ;IACD,IAAI,CAAC,iBAAiB,IAAI,iBAAiB,GAAG,CAAC,CAAC,IAAI,aAAa,KAAK,GAAG,EAAE;QACzE,OAAO,GAAG,CAAC;KACZ;IACD,OAAO,SAAS,CAAC;AACnB,CAAC,CAAC;AAEF;;;;;;;GAOG;AACH,MAAM,CAAC,MAAM,mBAAmB,GAAG,CAAC,QAAgB,EAAE,KAAa,EAAE,IAAY,EAAE,SAAiB,EAAE,EAAE;IACtG,MAAM,YAAY,GAAG,IAAI,GAAG,KAAK,CAAC;IAClC,UAAU;IACV,MAAM,SAAS,GAAG,CAAC,YAAY,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;IACjD,IAAI,UAAyB,CAAC;IAE9B,IAAI,OAAO,GAAG,QAAQ,CAAC;IACvB,IAAI,YAAY,IAAI,SAAS,EAAE;QAC7B,UAAU,GAAG,CAAC,CAAC;QACf,OAAO,GAAG,CAAC,CAAC;KACb;SAAM,IAAI,QAAQ,GAAG,CAAC,IAAI,SAAS,GAAG,QAAQ,IAAI,CAAC,EAAE;QACpD,UAAU,GAAG,CAAC,CAAC;QACf,OAAO,GAAG,SAAS,CAAC;KACrB;SAAM,IAAI,QAAQ,GAAG,CAAC,IAAI,SAAS,GAAG,QAAQ,IAAI,CAAC,EAAE;QACpD,UAAU,GAAG,CAAC,CAAC;QACf,OAAO,GAAG,CAAC,SAAS,CAAC;KACtB;IAED,OAAO,CAAC,UAAU,EAAE,OAAO,CAAU,CAAC;AACxC,CAAC,CAAC\"}","dts":{"name":"/Users/georgiiborisov/Documents/Nvsert--nextjs/src/assets/lib/react-photo-view/dist/utils/edgeHandle.d.ts","writeByteOrderMark":false,"text":"import type { CloseEdgeType, ReachType, TouchStartType } from '../types';\r\n/**\r\n * 获取接触边缘类型\r\n */\r\nexport declare const getReachType: (initialTouchState: TouchStartType, horizontalCloseEdge: CloseEdgeType, verticalCloseEdge: CloseEdgeType, reachPosition: ReachType) => ReachType;\r\n/**\r\n * 计算接触边缘位置\r\n * @param position - x/y\r\n * @param scale\r\n * @param size - width/height\r\n * @param innerSize - innerWidth/innerHeight\r\n * @return [CloseEdgeType, position]\r\n */\r\nexport declare const computePositionEdge: (position: number, scale: number, size: number, innerSize: number) => readonly [CloseEdgeType, number];\r\n"}}
