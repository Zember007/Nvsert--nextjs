{"version":3,"file":"react-photo-view.js","sources":["../src/hooks/useMethods.ts","../src/hooks/useSetState.ts","../src/photo-context.ts","../src/variables.ts","../src/utils/isTouchDevice.ts","../src/utils/limitTarget.ts","../src/hooks/useIsomorphicLayoutEffect.ts","../src/hooks/useEventListener.ts","../src/components/SlidePortal.tsx","../src/components/CloseIcon.tsx","../src/components/ArrowLeft.tsx","../src/components/ArrowRight.tsx","../src/components/PreventScroll.tsx","../src/utils/getMultipleTouchPosition.ts","../src/utils/edgeHandle.ts","../src/utils/getPositionOnMoveOrScale.ts","../src/utils/getRotateSize.ts","../src/utils/getSuitableImageSize.ts","../src/hooks/useDebounceCallback.ts","../src/hooks/useScrollPosition.ts","../src/hooks/useAnimationOrigin.tsx","../src/hooks/useMountedRef.ts","../src/components/Spinner.tsx","../src/Photo.tsx","../src/PhotoBox.tsx","../src/hooks/useContinuousTap.ts","../src/hooks/useAnimationPosition.ts","../src/hooks/useTargetScale.ts","../src/PhotoSlider.tsx","../src/hooks/useAnimationVisible.tsx","../src/hooks/useForkedVariable.ts","../src/hooks/useAdjacentImages.ts","../src/PhotoProvider.tsx","../src/PhotoView.tsx","../src/hooks/useInitial.ts"],"sourcesContent":["import { useRef } from 'react';\n\n/**\n * Hook of persistent methods\n */\nexport default function useMethods<T extends Record<string, (...args: any[]) => any>>(fn: T) {\n  const { current } = useRef({\n    fn,\n    curr: undefined as T | undefined,\n  });\n  current.fn = fn;\n\n  if (!current.curr) {\n    const curr = Object.create(null);\n    Object.keys(fn).forEach((key) => {\n      curr[key] = (...args: unknown[]) => current.fn[key].call(current.fn, ...args);\n    });\n    current.curr = curr;\n  }\n\n  return current.curr as T;\n}\n","import { useReducer } from 'react';\n\nexport default function useSetState<S extends Record<string, any>>(initialState: S) {\n  return useReducer(\n    (state: S, action: Partial<S> | ((state: S) => Partial<S>)) => ({\n      ...state,\n      ...(typeof action === 'function' ? action(state) : action),\n    }),\n    initialState,\n  );\n}\n","import { createContext } from 'react';\nimport type { DataType } from './types';\n\nexport type UpdateItemType = (dataType: DataType) => void;\n\nexport interface PhotoContextType {\n  show: (key: number) => void;\n  update: UpdateItemType;\n  remove: (key: number) => void;\n  nextId: () => number;\n}\n\nexport default createContext<PhotoContextType>(undefined as unknown as PhotoContextType);\n","/**\n * 最大触摸时间\n */\nexport const maxTouchTime = 200;\n\n/**\n * 默认动画速度\n */\nexport const defaultSpeed = 400;\n\n/**\n * 默认动画函数\n */\nexport const defaultEasing = 'cubic-bezier(0.25, 0.8, 0.25, 1)';\n\n/**\n * 最大滑动切换图片距离\n */\nexport const maxMoveOffset = 40;\n\n/**\n * 图片的间隔\n */\nexport const horizontalOffset = 20;\n\n/**\n * 最小初始响应距离\n */\nexport const minStartTouchOffset = 20;\n\n/**\n * 默认背景透明度\n */\nexport const defaultOpacity = 1;\n\n/**\n * 最小缩放度\n */\nexport const minScale = 1;\n\n/**\n * 最大缩放度（若图片足够大，则会超出）\n */\nexport const maxScale = 6;\n\n/**\n * 最小长图模式比例\n */\nexport const longModeRatio = 3;\n\n/**\n * 缩放弹性缓冲\n */\nexport const scaleBuffer = 0.2;\n\n/**\n * 最大等待动画时间\n */\nexport const maxWaitAnimationTime = 250;\n","/**\n * 是否支持触摸设备\n */\nconst isTouchDevice = typeof window !== 'undefined' && 'ontouchstart' in window;\n\nexport default isTouchDevice;\n","import { maxScale, minScale } from '../variables';\n\nexport const limitNumber = (value: number, min: number, max: number) => {\n  return Math.max(Math.min(value, max), min);\n};\n\n/**\n * 限制最大/最小缩放\n */\nexport const limitScale = (scale: number, max: number = 0, buffer: number = 0) => {\n  return limitNumber(scale, minScale * (1 - buffer), Math.max(maxScale, max) * (1 + buffer));\n};\n","import { useEffect, useLayoutEffect } from 'react';\n\nconst isSSR = typeof window === 'undefined' || /ServerSideRendering/.test(navigator && navigator.userAgent);\n\nexport default isSSR ? useEffect : useLayoutEffect;\n","import { useEffect, useRef } from 'react';\n\nexport default function useEventListener<K extends keyof WindowEventMap>(\n  type: K | undefined,\n  fn: (evt: WindowEventMap[K]) => void,\n  options?: AddEventListenerOptions,\n) {\n  const latest = useRef(fn);\n  latest.current = fn;\n\n  useEffect(() => {\n    function wrapper(evt: WindowEventMap[K]) {\n      latest.current(evt);\n    }\n    if (type) {\n      window.addEventListener(type, wrapper, options);\n    }\n    return () => {\n      if (type) {\n        window.removeEventListener(type, wrapper);\n      }\n    };\n  }, [type]);\n}\n","import React from 'react';\nimport { createPortal } from 'react-dom';\nimport './SlidePortal.less';\n\nexport interface ISliderPortalProps extends React.HTMLAttributes<HTMLDivElement> {\n  container?: HTMLElement;\n}\n\nfunction SlidePortal({ container = document.body, ...rest }: ISliderPortalProps) {\n  return createPortal(<div {...rest} />, container);\n}\n\nexport default SlidePortal;\n","import React, { ButtonHTMLAttributes } from 'react';\n\nfunction CloseIcon(props: any) {\n  return (\n    <button {...props}>\n      <div className=\"in\">\n        <div className=\"close-button-block\"></div>\n        <div className=\"close-button-block\"></div>\n      </div>\n      <div className=\"out\">\n        <div className=\"close-button-block\"></div>\n        <div className=\"close-button-block\"></div>\n      </div>\n    </button>\n  );\n}\n\nexport default CloseIcon;\n","import React from 'react';\n\nfunction ArrowLeft(props: React.HTMLAttributes<SVGElement>) {\n  return (\n    <svg width=\"44\" height=\"44\" viewBox=\"0 0 768 768\" {...props}>\n      <path d=\"M640.5 352.5v63h-390l178.5 180-45 45-256.5-256.5 256.5-256.5 45 45-178.5 180h390z\" />\n    </svg>\n  );\n}\n\nexport default ArrowLeft;\n","import React from 'react';\n\nfunction ArrowRight(props: React.HTMLAttributes<SVGElement>) {\n  return (\n    <svg width=\"44\" height=\"44\" viewBox=\"0 0 768 768\" {...props}>\n      <path d=\"M384 127.5l256.5 256.5-256.5 256.5-45-45 178.5-180h-390v-63h390l-178.5-180z\" />\n    </svg>\n  );\n}\n\nexport default ArrowRight;\n","import { useEffect } from 'react';\n\nexport default function PreventScroll() {\n  useEffect(() => {\n    const { style } = document.body;\n    const lastOverflow = style.overflow;\n    style.overflow = 'hidden';\n\n    return () => {\n      style.overflow = lastOverflow;\n    };\n  }, []);\n\n  return null;\n}\n","import type React from 'react';\n\n/**\n * 从 Touch 事件中获取两个触控中心位置\n */\nexport default function getMultipleTouchPosition(\n  evt: TouchEvent | React.TouchEvent,\n): [clientX: number, clientY: number, touchLength: number] {\n  const { clientX, clientY } = evt.touches[0];\n  if (evt.touches.length >= 2) {\n    const { clientX: nextClientX, clientY: nextClientY } = evt.touches[1];\n    return [\n      (clientX + nextClientX) / 2,\n      (clientY + nextClientY) / 2,\n      Math.sqrt((nextClientX - clientX) ** 2 + (nextClientY - clientY) ** 2),\n    ];\n  }\n  return [clientX, clientY, 0];\n}\n","import type { CloseEdgeType, ReachType, TouchStartType } from '../types';\n\n/**\n * 获取接触边缘类型\n */\nexport const getReachType = (\n  initialTouchState: TouchStartType,\n  horizontalCloseEdge: CloseEdgeType,\n  verticalCloseEdge: CloseEdgeType,\n  reachPosition: ReachType,\n): ReachType => {\n  if ((horizontalCloseEdge && initialTouchState === 1) || reachPosition === 'x') {\n    return 'x';\n  }\n  if ((verticalCloseEdge && initialTouchState > 1) || reachPosition === 'y') {\n    return 'y';\n  }\n  return undefined;\n};\n\n/**\n * 计算接触边缘位置\n * @param position - x/y\n * @param scale\n * @param size - width/height\n * @param innerSize - innerWidth/innerHeight\n * @return [CloseEdgeType, position]\n */\nexport const computePositionEdge = (position: number, scale: number, size: number, innerSize: number) => {\n  const currentWidth = size * scale;\n  // 图片超出的宽度\n  const outOffset = (currentWidth - innerSize) / 2;\n  let closedEdge: CloseEdgeType;\n\n  let current = position;\n  if (currentWidth <= innerSize) {\n    closedEdge = 1;\n    current = 0;\n  } else if (position > 0 && outOffset - position <= 0) {\n    closedEdge = 2;\n    current = outOffset;\n  } else if (position < 0 && outOffset + position <= 0) {\n    closedEdge = 3;\n    current = -outOffset;\n  }\n\n  return [closedEdge, current] as const;\n};\n","import { longModeRatio } from '../variables';\nimport { computePositionEdge } from './edgeHandle';\n\n/**\n * 获取移动或缩放之后的中心点\n */\nexport default function getPositionOnMoveOrScale(\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  scale: number,\n  toScale: number,\n  clientX: number = innerWidth / 2,\n  clientY: number = innerHeight / 2,\n  offsetX: number = 0,\n  offsetY: number = 0,\n) {\n  // 是否接触边缘\n  const [closedEdgeX] = computePositionEdge(x, toScale, width, innerWidth);\n  const [closedEdgeY] = computePositionEdge(y, toScale, height, innerHeight);\n\n  const centerClientX = innerWidth / 2;\n  const centerClientY = innerHeight / 2;\n\n  // 坐标偏移\n  const lastPositionX = centerClientX + x;\n  const lastPositionY = centerClientY + y;\n\n  // 偏移位置\n  const originX = clientX - (clientX - lastPositionX) * (toScale / scale) - centerClientX;\n  const originY = clientY - (clientY - lastPositionY) * (toScale / scale) - centerClientY;\n  // 长图模式无左右反馈\n  const longModeEdge = height / width >= longModeRatio && width * toScale === innerWidth;\n  // 超出边缘距离减半\n  return {\n    x: originX + (longModeEdge ? 0 : closedEdgeX ? offsetX / 2 : offsetX),\n    y: originY + (closedEdgeY ? offsetY / 2 : offsetY),\n    lastCX: clientX,\n    lastCY: clientY,\n  };\n}\n","/**\n * 获取旋转后的宽高\n */\nexport default function getRotateSize(rotate: number, width: number, height: number) {\n  const isVertical = rotate % 180 !== 0;\n\n  // 若图片不是水平则调换属性\n  if (isVertical) {\n    return [height, width, isVertical] as const;\n  }\n\n  return [width, height, isVertical] as const;\n}\n","import { longModeRatio } from '../variables';\nimport getRotateSize from './getRotateSize';\n\n/**\n * 获取图片合适的大小\n */\nexport default function getSuitableImageSize(naturalWidth: number, naturalHeight: number, rotate: number) {\n  const [currentWidth, currentHeight, isVertical] = getRotateSize(rotate, innerWidth, innerHeight);\n\n  let y = 0;\n  let width = currentWidth;\n  let height = currentHeight;\n\n  // 自适应宽高\n  const autoWidth = (naturalWidth / naturalHeight) * currentHeight;\n  const autoHeight = (naturalHeight / naturalWidth) * currentWidth;\n\n  const maxWidth = 448;\n\n  if (naturalWidth < currentWidth && naturalHeight < currentHeight) {\n    width = naturalWidth;\n    height = naturalHeight;\n  } else if (naturalWidth < currentWidth && naturalHeight >= currentHeight) {\n    width = autoWidth;\n  } else if (naturalWidth >= currentWidth && naturalHeight < currentHeight) {\n    height = autoHeight;\n  } else if (naturalWidth / naturalHeight > currentWidth / currentHeight) {\n    height = autoHeight;\n  }\n  // 长图模式\n  else if (naturalHeight / naturalWidth >= longModeRatio && !isVertical) {\n    height = autoHeight;\n    y = (height - currentHeight) / 2;\n  } else {\n    width = autoWidth;\n  }\n\n  // Ограничение ширины до 290px\n  // if (width > maxWidth) {\n    width = maxWidth;\n    height = (naturalHeight / naturalWidth) * maxWidth; // Сохраняем пропорции\n  // }\n\n  return {\n    width,\n    height,\n    x: 0,\n    y,\n    pause: true,\n  };\n}\n","import { useCallback, useRef } from 'react';\n\ninterface DebounceCallback<CallbackArguments extends any[]> {\n  (...args: CallbackArguments): void;\n  cancel: () => void;\n}\n\nexport default function useDebounceCallback<CallbackArguments extends any[]>(\n  callback: (...args: CallbackArguments) => void,\n  {\n    leading = false,\n    maxWait,\n    wait = maxWait || 0,\n  }: {\n    leading?: boolean;\n    maxWait?: number;\n    wait?: number;\n  },\n): DebounceCallback<CallbackArguments> {\n  const callbackRef = useRef(callback);\n  callbackRef.current = callback;\n\n  const prev = useRef(0);\n  const trailingTimeout = useRef<ReturnType<typeof setTimeout>>(null);\n  const clearTrailing = () => trailingTimeout.current && clearTimeout(trailingTimeout.current);\n\n  const fn = useCallback(\n    (...args: CallbackArguments) => {\n      const now = Date.now();\n\n      function call() {\n        prev.current = now;\n        clearTrailing();\n        callbackRef.current.apply(null, args);\n      }\n      const last = prev.current;\n      const offset = now - last;\n      // leading\n      if (last === 0) {\n        if (leading) {\n          call();\n        }\n        prev.current = now;\n      }\n\n      // body\n      if (maxWait !== undefined) {\n        if (offset > maxWait) {\n          call();\n          return;\n        }\n      } else if (offset < wait) {\n        prev.current = now;\n      }\n\n      // trailing\n      clearTrailing();\n      trailingTimeout.current = setTimeout(() => {\n        call();\n        prev.current = 0;\n      }, wait);\n    },\n    [wait, maxWait, leading],\n  );\n  (fn as DebounceCallback<CallbackArguments>).cancel = clearTrailing;\n\n  return fn as DebounceCallback<CallbackArguments>;\n}\n","import { computePositionEdge } from '../utils/edgeHandle';\nimport getPositionOnMoveOrScale from '../utils/getPositionOnMoveOrScale';\nimport getRotateSize from '../utils/getRotateSize';\nimport { defaultSpeed, maxTouchTime } from '../variables';\nimport useMethods from './useMethods';\n\n// 触边运动反馈\nconst rebound = (start: number, bound: number, callback: (spatial: number) => boolean) =>\n  easeOutMove(\n    start,\n    bound,\n    callback,\n    defaultSpeed / 4,\n    (t) => t,\n    () => easeOutMove(bound, start, callback),\n  );\n\n/**\n * 物理滚动到具体位置\n */\nexport default function useScrollPosition<C extends (spatial: number) => boolean>(\n  callbackX: C,\n  callbackY: C,\n  callbackS: C,\n) {\n  const callback = useMethods({\n    X: (spatial: number) => callbackX(spatial),\n    Y: (spatial: number) => callbackY(spatial),\n    S: (spatial: number) => callbackS(spatial),\n  });\n\n  return (\n    x: number,\n    y: number,\n    lastX: number,\n    lastY: number,\n    width: number,\n    height: number,\n    scale: number,\n    safeScale: number,\n    lastScale: number,\n    rotate: number,\n    touchedTime: number,\n  ) => {\n    const [currentWidth, currentHeight] = getRotateSize(rotate, width, height);\n    // 开始状态下边缘触发状态\n    const [beginEdgeX, beginX] = computePositionEdge(x, safeScale, currentWidth, innerWidth);\n    const [beginEdgeY, beginY] = computePositionEdge(y, safeScale, currentHeight, innerHeight);\n    const moveTime = Date.now() - touchedTime;\n\n    // 时间过长、超出安全范围的情况下不执行滚动逻辑，恢复安全范围\n    if (moveTime >= maxTouchTime || safeScale !== scale || Math.abs(lastScale - scale) > 1) {\n      // 计算中心缩放点\n      const { x: nextX, y: nextY } = getPositionOnMoveOrScale(x, y, width, height, scale, safeScale);\n      const targetX = beginEdgeX ? beginX : nextX !== x ? nextX : null;\n      const targetY = beginEdgeY ? beginY : nextY !== y ? nextY : null;\n\n      if (targetX !== null) {\n        easeOutMove(x, targetX, callback.X);\n      }\n      if (targetY !== null) {\n        easeOutMove(y, targetY, callback.Y);\n      }\n      if (safeScale !== scale) {\n        easeOutMove(scale, safeScale, callback.S);\n      }\n      return;\n    }\n\n    // 初始速度\n    const speedX = (x - lastX) / moveTime;\n    const speedY = (y - lastY) / moveTime;\n    const speedT = Math.sqrt(speedX ** 2 + speedY ** 2);\n    // 是否接触到边缘\n    let edgeX = false;\n    let edgeY = false;\n\n    scrollMove(speedT, (spatial) => {\n      const nextX = x + spatial * (speedX / speedT);\n      const nextY = y + spatial * (speedY / speedT);\n\n      const [isEdgeX, currentX] = computePositionEdge(nextX, scale, currentWidth, innerWidth);\n      const [isEdgeY, currentY] = computePositionEdge(nextY, scale, currentHeight, innerHeight);\n\n      if (isEdgeX && !edgeX) {\n        edgeX = true;\n        if (beginEdgeX) {\n          easeOutMove(nextX, currentX, callback.X);\n        } else {\n          rebound(currentX, nextX + (nextX - currentX), callback.X);\n        }\n      }\n\n      if (isEdgeY && !edgeY) {\n        edgeY = true;\n        if (beginEdgeY) {\n          easeOutMove(nextY, currentY, callback.Y);\n        } else {\n          rebound(currentY, nextY + (nextY - currentY), callback.Y);\n        }\n      }\n      // 同时接触边缘的情况下停止滚动\n      if (edgeX && edgeY) {\n        return false;\n      }\n\n      const resultX = edgeX || callback.X(currentX);\n      const resultY = edgeY || callback.Y(currentY);\n      return resultX && resultY;\n    });\n  };\n}\n\n// 加速度\nconst acceleration = -0.001;\n// 阻力\nconst resistance = 0.0002;\n\n/**\n * 通过速度滚动到停止\n */\nfunction scrollMove(initialSpeed: number, callback: (spatial: number) => boolean) {\n  let v = initialSpeed;\n  let s = 0;\n  let lastTime: number | undefined;\n  let frameId = 0;\n\n  const calcMove = (now: number) => {\n    if (!lastTime) {\n      lastTime = now;\n    }\n    const dt = now - lastTime;\n    const direction = Math.sign(initialSpeed);\n    const a = direction * acceleration;\n    const f = Math.sign(-v) * v ** 2 * resistance;\n    const ds = v * dt + ((a + f) * dt ** 2) / 2;\n    v += (a + f) * dt;\n\n    s += ds;\n    // move to s\n    lastTime = now;\n\n    if (direction * v <= 0) {\n      caf();\n      return;\n    }\n\n    if (callback(s)) {\n      raf();\n      return;\n    }\n    caf();\n  };\n  raf();\n\n  function raf() {\n    frameId = requestAnimationFrame(calcMove);\n  }\n  function caf() {\n    cancelAnimationFrame(frameId);\n  }\n}\n\n/**\n * 缓动函数\n */\nconst easeOutQuart = (x: number) => 1 - (1 - x) ** 4;\n\n/**\n * 缓动回调\n */\nfunction easeOutMove(\n  start: number,\n  end: number,\n  callback: (spatial: number) => boolean,\n  speed = defaultSpeed,\n  easing = easeOutQuart,\n  complete?: () => void,\n) {\n  const distance = end - start;\n  if (distance === 0) {\n    return;\n  }\n\n  const startTime = Date.now();\n  let frameId = 0;\n\n  const calcMove = () => {\n    const time = Math.min(1, (Date.now() - startTime) / speed);\n    const result = callback(start + easing(time) * distance);\n\n    if (result && time < 1) {\n      raf();\n      return;\n    }\n    cancelAnimationFrame(frameId);\n    if (time >= 1 && complete) {\n      complete();\n    }\n  };\n  raf();\n\n  function raf() {\n    frameId = requestAnimationFrame(calcMove);\n  }\n}\n","import type { Dispatch, MutableRefObject, SetStateAction } from 'react';\nimport { useState, useEffect, useRef } from 'react';\nimport type { EasingMode, OriginRectType } from '../types';\nimport useMethods from './useMethods';\nimport { maxWaitAnimationTime } from '../variables';\n\nconst initialRect: OriginRectType = {\n  T: 0,\n  L: 0,\n  W: 0,\n  H: 0,\n  // 图像填充方式\n  FIT: undefined,\n};\n\nexport default function useAnimationOrigin(\n  visible: boolean | undefined,\n  originRef: MutableRefObject<HTMLElement | null> | undefined,\n  loaded: boolean,\n  speed: number,\n  updateEasing: (pause: boolean) => void,\n): [\n  // 动画状态\n  easingMode: EasingMode,\n  originRect: OriginRectType,\n] {\n  const [originRect, updateOriginRect] = useState(initialRect);\n  // 动画状态\n  const [easingMode, updateEasingMode] = useState<EasingMode>(0);\n  const initialTime = useRef<number>(null);\n\n  const fn = useMethods({\n    OK: () => visible && updateEasingMode(4),\n  });\n\n  useEffect(() => {\n    // 记录初始打开的时间\n    if (!initialTime.current) {\n      initialTime.current = Date.now();\n    }\n    if (!loaded) {\n      return;\n    }\n    handleUpdateOrigin(originRef, updateOriginRect);\n    // 打开动画处理\n    if (visible) {\n      // 小于最大允许动画时间，则执行缩放动画\n      if (Date.now() - initialTime.current < maxWaitAnimationTime) {\n        updateEasingMode(1);\n        // 延时执行动画，保持 transition 生效\n        requestAnimationFrame(() => {\n          updateEasingMode(2);\n          requestAnimationFrame(() => handleToShape(3));\n        });\n        setTimeout(fn.OK, speed);\n        return;\n      }\n      // 超出则不执行\n      updateEasingMode(4);\n      return;\n    }\n    // 关闭动画处理\n    handleToShape(5);\n  }, [visible, loaded]);\n\n  function handleToShape(currentShape: EasingMode) {\n    updateEasing(false);\n    updateEasingMode(currentShape);\n  }\n\n  return [easingMode, originRect];\n}\n\n/**\n * 更新缩略图位置信息\n */\nfunction handleUpdateOrigin(\n  originRef: MutableRefObject<HTMLElement | null> | undefined,\n  updateOriginRect: Dispatch<SetStateAction<typeof initialRect>>,\n) {\n  const element = originRef && originRef.current;\n\n  if (element && element.nodeType === 1) {\n    // 获取触发时节点位置\n    const { top, left, width, height } = element.getBoundingClientRect();\n    const isImage = element.tagName === 'IMG';\n    updateOriginRect({\n      T: top,\n      L: left,\n      W: width,\n      H: height,\n      FIT: isImage ? (getComputedStyle(element).objectFit as 'contain' | 'cover' | 'fill' | undefined) : undefined,\n    });\n  }\n}\n","import { useEffect, useRef } from 'react';\n\nconst useMountedRef = () => {\n  const mountedRef = useRef(false);\n  useEffect(() => {\n    mountedRef.current = true;\n    return () => {\n      mountedRef.current = false;\n    };\n  }, []);\n  return mountedRef;\n};\n\nexport default useMountedRef;\n","import React from 'react';\nimport './Spinner.less';\n\n// eslint-disable-next-line react/prop-types\nfunction Spinner({ className = '', ...props }: React.HTMLAttributes<HTMLElement>) {\n  return (\n    <div className={`PhotoView__Spinner ${className}`} {...props}>\n      <svg viewBox=\"0 0 32 32\" width=\"36\" height=\"36\" fill=\"white\">\n        <path opacity=\".25\" d=\"M16 0 A16 16 0 0 0 16 32 A16 16 0 0 0 16 0 M16 4 A12 12 0 0 1 16 28 A12 12 0 0 1 16 4\" />\n        <path d=\"M16 0 A16 16 0 0 1 32 16 L28 16 A12 12 0 0 0 16 4z\" />\n      </svg>\n    </div>\n  );\n}\n\nexport default Spinner;\n","import React from 'react';\nimport Spinner from './components/Spinner';\nimport useMountedRef from './hooks/useMountedRef';\nimport type { BrokenElementParams } from './types';\nimport './Photo.less';\n\nexport interface IPhotoLoadedParams {\n  loaded?: boolean;\n  naturalWidth?: number;\n  naturalHeight?: number;\n  broken?: boolean;\n}\n\nexport interface IPhotoProps extends React.HTMLAttributes<HTMLElement> {\n  src: string;\n  loaded: boolean;\n  broken: boolean;\n  onPhotoLoad: (params: IPhotoLoadedParams) => void;\n  loadingElement?: React.ReactElement;\n  brokenElement?: React.ReactElement | ((photoProps: BrokenElementParams) => React.ReactElement);\n}\n\nexport default function Photo({\n  src,\n  loaded,\n  broken,\n  className,\n  onPhotoLoad,\n  loadingElement,\n  brokenElement,\n  ...restProps\n}: IPhotoProps) {\n  const mountedRef = useMountedRef();\n\n  function handleImageLoaded(e: React.SyntheticEvent<HTMLImageElement>) {\n    const { naturalWidth, naturalHeight } = e.target as HTMLImageElement;\n    if (mountedRef.current) {\n      onPhotoLoad({\n        loaded: true,\n        naturalWidth,\n        naturalHeight,\n      });\n    }\n  }\n\n  function handleImageBroken() {\n    if (mountedRef.current) {\n      onPhotoLoad({\n        broken: true,\n      });\n    }\n  }\n\n  if (src && !broken) {\n    return (\n      <>\n        <div className={`PhotoView__Photo__attr ${!loaded && 'loaded'}`}>\n          <img\n            className={`PhotoView__Photo${className ? ` ${className}` : ''}`}\n            src={src}\n            onLoad={handleImageLoaded}\n            onError={handleImageBroken}\n            draggable={false}\n            alt=\"document\"\n            {...restProps}\n          />\n        </div>\n        {!loaded &&\n          (loadingElement ? (\n            <span className=\"PhotoView__icon\">{loadingElement}</span>\n          ) : (\n            <Spinner className=\"PhotoView__icon\" />\n          ))}\n      </>\n    );\n  }\n\n  if (brokenElement) {\n    return (\n      <span className=\"PhotoView__icon\">\n        {typeof brokenElement === 'function' ? brokenElement({ src }) : brokenElement}\n      </span>\n    );\n  }\n\n  return null;\n}\n","import React, { useRef } from 'react';\nimport isTouchDevice from './utils/isTouchDevice';\nimport getMultipleTouchPosition from './utils/getMultipleTouchPosition';\nimport getPositionOnMoveOrScale from './utils/getPositionOnMoveOrScale';\nimport { getReachType, computePositionEdge } from './utils/edgeHandle';\nimport getRotateSize from './utils/getRotateSize';\nimport { limitScale } from './utils/limitTarget';\nimport getSuitableImageSize from './utils/getSuitableImageSize';\nimport useIsomorphicLayoutEffect from './hooks/useIsomorphicLayoutEffect';\nimport { minStartTouchOffset, scaleBuffer } from './variables';\nimport type {\n  DataType,\n  ReachMoveFunction,\n  ReachFunction,\n  PhotoTapFunction,\n  BrokenElementParams,\n  ExposedProperties,\n  ReachType,\n  TouchStartType,\n} from './types';\nimport useSetState from './hooks/useSetState';\nimport useMethods from './hooks/useMethods';\nimport useDebounceCallback from './hooks/useDebounceCallback';\nimport useEventListener from './hooks/useEventListener';\nimport useContinuousTap from './hooks/useContinuousTap';\nimport useScrollPosition from './hooks/useScrollPosition';\nimport useAnimationPosition from './hooks/useAnimationPosition';\nimport useMountedRef from './hooks/useMountedRef';\nimport type { IPhotoLoadedParams } from './Photo';\nimport Photo from './Photo';\nimport './PhotoBox.less';\n\nexport interface PhotoBoxProps {\n  // 图片信息\n  item: DataType;\n  // 是否可见\n  visible: boolean;\n  // 动画时间\n  speed: number;\n  // 动画函数\n  easing: string;\n  // 容器类名\n  wrapClassName?: string;\n  // 图片类名\n  className?: string;\n  // style\n  style?: object;\n  // 自定义 loading\n  loadingElement?: React.ReactElement;\n  // 加载失败 Element\n  brokenElement?: React.ReactElement | ((photoProps: BrokenElementParams) => React.ReactElement);\n\n  // Photo 点击事件\n  onPhotoTap: PhotoTapFunction;\n  // Mask 点击事件\n  onMaskTap: PhotoTapFunction;\n  // 到达边缘滑动事件\n  onReachMove?: ReachMoveFunction;\n  // 触摸解除事件\n  onReachUp?: ReachFunction;\n  // Resize 事件\n  onPhotoResize: () => void;\n  // 向父组件导出属性\n  expose: (state: ExposedProperties) => void;\n  // 是否在当前操作中\n  isActive: boolean;\n}\n\nconst initialState = {\n  // 真实宽度\n  naturalWidth: undefined as number | undefined,\n  // 真实高度\n  naturalHeight: undefined as number | undefined,\n  // 宽度\n  width: undefined as number | undefined,\n  // 高度\n  height: undefined as number | undefined,\n  // 加载成功状态\n  loaded: undefined as boolean | undefined,\n  // 破碎状态\n  broken: false,\n\n  // 图片 X 偏移量\n  x: 0,\n  // 图片 y 偏移量\n  y: 0,\n  // 图片处于触摸的状态\n  touched: false,\n  // 背景处于触摸状态\n  maskTouched: false,\n  // 旋转状态\n  rotate: 0,\n  // 放大缩小\n  scale: 1,\n\n  // 触摸开始时 x 原始坐标\n  CX: 0,\n  // 触摸开始时 y 原始坐标\n  CY: 0,\n\n  // 触摸开始时图片 x 偏移量\n  lastX: 0,\n  // 触摸开始时图片 y 偏移量\n  lastY: 0,\n  // 上一个触摸状态 x 原始坐标\n  lastCX: 0,\n  // 上一个触摸状态 y 原始坐标\n  lastCY: 0,\n  // 上一个触摸状态的 scale\n  lastScale: 1,\n\n  // 触摸开始时时间\n  touchTime: 0,\n  // 多指触控间距\n  touchLength: 0,\n  // 是否暂停 transition\n  pause: true,\n  // 停止 Raf\n  stopRaf: true,\n  // 当前边缘触发状态\n  reach: undefined as ReachType,\n};\n\nexport default function PhotoBox({\n  item: { src, render, width: customWidth = 0, height: customHeight = 0, originRef },\n  visible,\n  speed,\n  easing,\n  wrapClassName,\n  className,\n  style,\n  loadingElement,\n  brokenElement,\n\n  onPhotoTap,\n  onMaskTap,\n  onReachMove,\n  onReachUp,\n  onPhotoResize,\n  isActive,\n  expose,\n}: PhotoBoxProps) {\n  const [state, updateState] = useSetState(initialState);\n  const initialTouchRef = useRef<TouchStartType>(0);\n  const mounted = useMountedRef();\n\n  const {\n    naturalWidth = customWidth,\n    naturalHeight = customHeight,\n    width = customWidth,\n    height = customHeight,\n    loaded = !src,\n    broken,\n    x,\n    y,\n    touched,\n    stopRaf,\n    maskTouched,\n    rotate,\n    scale,\n    CX,\n    CY,\n    lastX,\n    lastY,\n    lastCX,\n    lastCY,\n    lastScale,\n    touchTime,\n    touchLength,\n    pause,\n    reach,\n  } = state;\n\n  const fn = useMethods({\n    onScale: (current: number) => onScale(limitScale(current)),\n    onRotate(current: number) {\n      if (rotate !== current) {\n        expose({ rotate: current });\n        updateState({ rotate: current, ...getSuitableImageSize(naturalWidth, naturalHeight, current) });\n      }\n    },\n  });\n\n  // 默认为屏幕中心缩放\n  function onScale(current: number, clientX?: number, clientY?: number) {\n    if (scale !== current) {\n      expose({ scale: current });\n      updateState({\n        scale: current,\n        ...getPositionOnMoveOrScale(x, y, width, height, scale, current, clientX, clientY),\n        ...(current <= 1 && { x: 0, y: 0 }),\n      });\n    }\n  }\n\n  const handleMove = useDebounceCallback(\n    (nextClientX: number, nextClientY: number, currentTouchLength: number = 0) => {\n      if ((touched || maskTouched) && isActive) {\n        // 通过旋转调换宽高\n        const [currentWidth, currentHeight] = getRotateSize(rotate, width, height);\n        // 单指最小缩放下，以初始移动距离来判断意图\n        if (currentTouchLength === 0 && initialTouchRef.current === 0) {\n          const isStillX = Math.abs(nextClientX - CX) <= minStartTouchOffset;\n          const isStillY = Math.abs(nextClientY - CY) <= minStartTouchOffset;\n          // 初始移动距离不足\n          if (isStillX && isStillY) {\n            // 方向记录上次移动距离，以便平滑过渡\n            updateState({ lastCX: nextClientX, lastCY: nextClientY });\n            return;\n          }\n          // 设置响应状态\n          initialTouchRef.current = !isStillX ? 1 : nextClientY > CY ? 3 : 2;\n        }\n\n        const offsetX = nextClientX - lastCX;\n        const offsetY = nextClientY - lastCY;\n        // 边缘触发状态\n        let currentReach: ReachType;\n        if (currentTouchLength === 0) {\n          // 边缘超出状态\n          const [horizontalCloseEdge] = computePositionEdge(offsetX + lastX, scale, currentWidth, innerWidth);\n          const [verticalCloseEdge] = computePositionEdge(offsetY + lastY, scale, currentHeight, innerHeight);\n          // 边缘触发检测\n          currentReach = getReachType(initialTouchRef.current, horizontalCloseEdge, verticalCloseEdge, reach);\n\n          // 接触边缘\n          if (currentReach !== undefined) {\n            onReachMove(currentReach, nextClientX, nextClientY, scale);\n          }\n        }\n        // 横向边缘触发、背景触发禁用当前滑动\n        if (currentReach === 'x' || maskTouched) {\n          updateState({ reach: 'x' });\n          return;\n        }\n        // 目标倍数\n        const toScale = limitScale(\n          scale + ((currentTouchLength - touchLength) / 100 / 2) * scale,\n          naturalWidth / width,\n          scaleBuffer,\n        );\n        // 导出变量\n        expose({ scale: toScale });\n        updateState({\n          touchLength: currentTouchLength,\n          reach: currentReach,\n          scale: toScale,\n          ...getPositionOnMoveOrScale(x, y, width, height, scale, toScale, nextClientX, nextClientY, offsetX, offsetY),\n        });\n      }\n    },\n    {\n      maxWait: 8,\n    },\n  );\n\n  function updateRaf(position: { x?: number; y?: number }) {\n    if (stopRaf || touched) {\n      return false;\n    }\n    if (mounted.current) {\n      // 下拉关闭时可以有动画\n      updateState({ ...position, pause: visible });\n    }\n    return mounted.current;\n  }\n\n  const slideToPosition = useScrollPosition(\n    (nextX) => updateRaf({ x: nextX }),\n    (nextY) => updateRaf({ y: nextY }),\n    (nextScale) => {\n      if (mounted.current) {\n        expose({ scale: nextScale });\n        updateState({ scale: nextScale });\n      }\n      return !touched && mounted.current;\n    },\n  );\n\n  const handlePhotoTap = useContinuousTap(onPhotoTap, (currentClientX: number, currentClientY: number) => {\n    if (!reach) {\n      // 若图片足够大，则放大适应的倍数\n      const endScale = scale !== 1 ? 1 : Math.max(2, naturalWidth / width);\n      onScale(endScale, currentClientX, currentClientY);\n    }\n  });\n\n  function handleUp(nextClientX: number, nextClientY: number) {\n    // 重置响应状态\n    initialTouchRef.current = 0;\n    if ((touched || maskTouched) && isActive) {\n      updateState({\n        touched: false,\n        maskTouched: false,\n        pause: false,\n        stopRaf: false,\n        reach: undefined,\n      });\n      const safeScale = limitScale(scale, naturalWidth / width);\n      // Go\n      slideToPosition(x, y, lastX, lastY, width, height, scale, safeScale, lastScale, rotate, touchTime);\n\n      onReachUp(nextClientX, nextClientY);\n      // 触发 Tap 事件\n      if (CX === nextClientX && CY === nextClientY) {\n        if (touched) {\n          handlePhotoTap(nextClientX, nextClientY);\n          return;\n        }\n        if (maskTouched) {\n          onMaskTap(nextClientX, nextClientY);\n        }\n      }\n    }\n  }\n\n  useEventListener(isTouchDevice ? undefined : 'mousemove', (e) => {\n    e.preventDefault();\n    handleMove(e.clientX, e.clientY);\n  });\n  useEventListener(isTouchDevice ? undefined : 'mouseup', (e) => {\n    handleUp(e.clientX, e.clientY);\n  });\n  useEventListener(\n    isTouchDevice ? 'touchmove' : undefined,\n    (e) => {\n      e.preventDefault();\n      const position = getMultipleTouchPosition(e);\n      handleMove(...position);\n    },\n    { passive: false },\n  );\n  useEventListener(\n    isTouchDevice ? 'touchend' : undefined,\n    ({ changedTouches }) => {\n      const touch = changedTouches[0];\n      handleUp(touch.clientX, touch.clientY);\n    },\n    { passive: false },\n  );\n  useEventListener(\n    'resize',\n    useDebounceCallback(\n      () => {\n        if (loaded && !touched) {\n          updateState(getSuitableImageSize(naturalWidth, naturalHeight, rotate));\n          onPhotoResize();\n        }\n      },\n      { maxWait: 8 },\n    ),\n  );\n\n  useIsomorphicLayoutEffect(() => {\n    if (isActive) {\n      expose({ scale, rotate, ...fn });\n    }\n  }, [isActive]);\n\n  function handlePhotoLoad(params: IPhotoLoadedParams) {\n    updateState({\n      ...params,\n      ...(params.loaded && getSuitableImageSize(params.naturalWidth || 0, params.naturalHeight || 0, rotate)),\n    });\n  }\n\n  function handleStart(currentClientX: number, currentClientY: number, currentTouchLength: number = 0) {\n    updateState({\n      touched: true,\n      CX: currentClientX,\n      CY: currentClientY,\n      lastCX: currentClientX,\n      lastCY: currentClientY,\n      lastX: x,\n      lastY: y,\n      lastScale: scale,\n      touchLength: currentTouchLength,\n      touchTime: Date.now(),\n    });\n  }\n\n  function handleWheel(e: React.WheelEvent) {\n    if (!reach) {\n      // 限制最大倍数和最小倍数\n      const toScale = limitScale(scale - e.deltaY / 100 / 2, naturalWidth / width);\n      updateState({ stopRaf: true });\n      onScale(toScale, e.clientX, e.clientY);\n    }\n  }\n\n  function handleMaskStart(e: { clientX: number; clientY: number }) {\n    updateState({\n      maskTouched: true,\n      CX: e.clientX,\n      CY: e.clientY,\n      lastX: x,\n      lastY: y,\n    });\n  }\n\n  function handleTouchStart(e: React.TouchEvent) {\n    e.stopPropagation();\n    handleStart(...getMultipleTouchPosition(e));\n  }\n\n  function handleMouseDown(e: React.MouseEvent) {\n    e.stopPropagation();\n    if (e.button === 0) {\n      handleStart(e.clientX, e.clientY, 0);\n    }\n  }\n\n  // 计算位置\n  const [translateX, translateY, currentWidth, currentHeight, currentScale, opacity, easingMode, FIT] =\n    useAnimationPosition(visible, originRef, loaded, x, y, width, height, scale, speed, (isPause: boolean) =>\n      updateState({ pause: isPause }),\n    );\n  // 图片 objectFit 渐变时间\n  const transitionLayoutTime = easingMode < 4 ? speed / 2 : easingMode > 4 ? speed : 0;\n  const transitionCSS = `transform ${speed}ms ${easing}`;\n\n  const attrs = {\n    className,\n    onMouseDown: isTouchDevice ? undefined : handleMouseDown,\n    onTouchStart: isTouchDevice ? handleTouchStart : undefined,\n    onWheel: handleWheel,\n    style: {\n      width: `${currentWidth}px`,\n      height: `${currentHeight}px`,\n      opacity,\n      objectFit: easingMode === 4 ? undefined : FIT,\n      transform: rotate ? `rotate(${rotate}deg)` : undefined,\n      transition:\n        // 初始状态无渐变\n        easingMode > 2\n          ? `${transitionCSS}, opacity ${speed}ms ease, height ${transitionLayoutTime}ms ${easing}`\n          : undefined,\n    },\n  };\n\n  return (\n    <div\n      className={`PhotoView__PhotoWrap${wrapClassName ? ` ${wrapClassName}` : ''}`}\n      style={style}\n      onMouseDown={!isTouchDevice && isActive ? handleMaskStart : undefined}\n      onTouchStart={isTouchDevice && isActive ? (e) => handleMaskStart(e.touches[0]) : undefined}\n    >\n      <div\n        className=\"PhotoView__PhotoBox\"\n        style={{\n          transform: `matrix(${currentScale}, 0, 0, ${currentScale}, ${translateX}, ${translateY})`,\n          transition: touched || pause ? undefined : transitionCSS,\n          willChange: isActive ? 'transform' : undefined,\n        }}\n      >\n        {src ? (\n          <Photo\n            src={src}\n            loaded={loaded}\n            broken={broken}\n            {...attrs}\n            onPhotoLoad={handlePhotoLoad}\n            loadingElement={loadingElement}\n            brokenElement={brokenElement}\n          />\n        ) : (\n          render && render({ attrs, scale: currentScale, rotate })\n        )}\n      </div>\n    </div>\n  );\n}\n","import { useRef } from 'react';\nimport useDebounceCallback from './useDebounceCallback';\n\nexport type TapFuncType<T> = (...args: T[]) => void;\n\n/**\n * 单击和双击事件处理\n * @param singleTap - 单击事件\n * @param doubleTap - 双击事件\n * @return invokeTap\n */\nexport default function useContinuousTap<T>(singleTap: TapFuncType<T>, doubleTap: TapFuncType<T>): TapFuncType<T> {\n  // 当前连续点击次数\n  const continuousClick = useRef(0);\n\n  const debounceTap = useDebounceCallback(\n    (...args) => {\n      continuousClick.current = 0;\n      singleTap(...args);\n    },\n    {\n      wait: 300,\n    },\n  );\n\n  return function invokeTap(...args) {\n    continuousClick.current += 1;\n    debounceTap(...args);\n    // 双击\n    if (continuousClick.current >= 2) {\n      debounceTap.cancel();\n      continuousClick.current = 0;\n      doubleTap(...args);\n    }\n  };\n}\n","import type { MutableRefObject } from 'react';\nimport useAnimationOrigin from './useAnimationOrigin';\nimport useTargetScale from './useTargetScale';\n\nexport default function useAnimationPosition(\n  visible: boolean | undefined,\n  originRef: MutableRefObject<HTMLElement | null> | undefined,\n  loaded: boolean,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  scale: number,\n  speed: number,\n  updateEasing: (pause: boolean) => void,\n) {\n  // 延迟更新 width/height\n  const [autoWidth, autoHeight, autoScale] = useTargetScale(width, height, scale, speed, updateEasing);\n  // 动画源处理\n  const [easingMode, originRect] = useAnimationOrigin(visible, originRef, loaded, speed, updateEasing);\n\n  // 计算动画位置\n  const { T, L, W, H, FIT } = originRect;\n  // 偏移量，x: 0, y: 0 居中为初始\n  const centerWidth = innerWidth / 2;\n  const centerHeight = innerHeight / 2;\n  const offsetX = centerWidth - (width * scale) / 2;\n  const offsetY = centerHeight - (height * scale) / 2;\n  // 缩略图状态\n  const miniMode = easingMode < 3 || easingMode > 4;\n  // 有缩略图时，则为缩略图的位置，否则居中\n  const translateX = miniMode ? (W ? L : centerWidth) : x + offsetX;\n  const translateY = miniMode ? (W ? T : centerHeight) : y + offsetY;\n\n  // 最小值缩放\n  const minScale = W / (width * scale) || 0.01;\n\n  // 适应 objectFit 保持缩略图宽高比\n  const currentHeight = miniMode && FIT ? autoWidth * (H / W) : autoHeight;\n  // 初始加载情况无缩放\n  const currentScale = easingMode === 0 ? autoScale : miniMode ? minScale : autoScale;\n  const opacity = miniMode ? (FIT ? 1 : 0) : 1;\n\n  return [translateX, translateY, autoWidth, currentHeight, currentScale, opacity, easingMode, FIT] as const;\n}\n","import { useRef } from 'react';\nimport useSetState from './useSetState';\nimport useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect';\nimport useDebounceCallback from './useDebounceCallback';\n\n/**\n * 目标缩放延迟处理\n */\nexport default function useTargetScale(\n  realWidth: number,\n  realHeight: number,\n  realScale: number,\n  speed: number,\n  updateEasing: (pause: boolean) => void,\n) {\n  const execRef = useRef(false);\n\n  const [{ lead, scale }, updateState] = useSetState({ lead: true, scale: realScale });\n\n  const moveScale = useDebounceCallback(\n    async (current: number) => {\n      updateEasing(true);\n      updateState({ lead: false, scale: current });\n    },\n    { wait: speed },\n  );\n\n  useIsomorphicLayoutEffect(() => {\n    if (!execRef.current) {\n      execRef.current = true;\n      return;\n    }\n    updateEasing(false);\n    updateState({ lead: true });\n\n    moveScale(realScale);\n  }, [realScale]);\n\n  // 运动开始\n  if (lead) {\n    return [realWidth * scale, realHeight * scale, realScale / scale] as const;\n  }\n\n  // 运动结束\n  return [realWidth * realScale, realHeight * realScale, 1] as const;\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport type { DataType, PhotoProviderBase, OverlayRenderProps, ReachType } from './types';\nimport { defaultEasing, defaultSpeed, defaultOpacity, horizontalOffset, maxMoveOffset } from './variables';\nimport isTouchDevice from './utils/isTouchDevice';\nimport { limitNumber } from './utils/limitTarget';\nimport useIsomorphicLayoutEffect from './hooks/useIsomorphicLayoutEffect';\nimport useAdjacentImages from './hooks/useAdjacentImages';\nimport useSetState from './hooks/useSetState';\nimport useEventListener from './hooks/useEventListener';\nimport useAnimationVisible from './hooks/useAnimationVisible';\nimport useMethods from './hooks/useMethods';\nimport SlidePortal from './components/SlidePortal';\nimport CloseIcon from './components/CloseIcon';\nimport ArrowLeft from './components/ArrowLeft';\nimport ArrowRight from './components/ArrowRight';\nimport PreventScroll from './components/PreventScroll';\nimport PhotoBox from './PhotoBox';\nimport './PhotoSlider.less';\nimport { init } from './hooks/webgl';\n\nexport interface IPhotoSliderProps extends PhotoProviderBase {\n  // 图片列表\n  images: DataType[];\n  // 图片当前索引\n  index?: number;\n  // 索引改变回调\n  onIndexChange?: (index: number) => void;\n  // 可见\n  visible: boolean;\n  // 关闭回调\n  onClose: (evt?: React.MouseEvent | React.TouchEvent) => void;\n  // 关闭动画结束后回调\n  afterClose?: () => void;\n\n  direction?: 'ltr' | 'rtl';\n}\n\ntype PhotoSliderState = {\n  // 偏移量\n  x: number;\n  // 图片处于触摸的状态\n  touched: boolean;\n  // 是否暂停 transition\n  pause: boolean;\n  // Reach 开始时 x 坐标\n  lastCX: number | undefined;\n  // Reach 开始时 y 坐标\n  lastCY: number | undefined;\n  // 背景透明度\n  bg: number | null | undefined;\n  // 上次关闭的背景透明度\n  lastBg: number | null | undefined;\n  // 是否显示 overlay\n  overlay: boolean;\n  // 是否为最小状态，可下拉关闭\n  minimal: boolean;\n  // 缩放\n  scale: number;\n  // 旋转\n  rotate: number;\n  // 缩放回调\n  onScale?: (scale: number) => void;\n  // 旋转回调\n  onRotate?: (rotate: number) => void;\n};\n\nconst initialState: PhotoSliderState = {\n  x: 0,\n  touched: false,\n  pause: false,\n  lastCX: undefined,\n  lastCY: undefined,\n  bg: undefined,\n  lastBg: undefined,\n  overlay: true,\n  minimal: true,\n  scale: 1,\n  rotate: 0,\n};\n\nexport default function PhotoSlider(props: IPhotoSliderProps) {\n  const {\n    loop = 3,\n    speed: speedFn,\n    easing: easingFn,\n    photoClosable,\n    maskClosable = true,\n    maskOpacity = defaultOpacity,\n    pullClosable = true,\n    bannerVisible = true,\n    overlayRender,\n    toolbarRender,\n    className,\n    maskClassName,\n    photoClassName,\n    photoWrapClassName,\n    loadingElement,\n    brokenElement,\n    images,\n    index: controlledIndex = 0,\n    onIndexChange: controlledIndexChange,\n    visible,\n    onClose,\n    afterClose,\n    portalContainer,\n  } = props;\n\n  const [state, updateState] = useSetState(initialState);\n  const [innerIndex, updateInnerIndex] = useState(0);\n  const [indexController, setIndexController] = useState<any>(null);\n\n\n\n  const {\n    x,\n    touched,\n    pause,\n\n    lastCX,\n    lastCY,\n\n    bg = maskOpacity,\n    lastBg,\n    overlay,\n    minimal,\n\n    scale,\n    rotate,\n    onScale,\n    onRotate,\n  } = state;\n\n  // 受控 index\n  const isControlled = props.hasOwnProperty('index');\n  const index = isControlled ? controlledIndex : innerIndex;\n  const onIndexChange = isControlled ? controlledIndexChange : updateInnerIndex;\n  // 内部虚拟 index\n  const virtualIndexRef = useRef(index);\n\n  // 当前图片\n  const imageLength = images.length;\n  const currentImage: DataType | undefined = images[index];\n\n  // 是否开启\n  // noinspection SuspiciousTypeOfGuard\n  const enableLoop = typeof loop === 'boolean' ? loop : imageLength > loop;\n\n  // 显示动画处理\n  const [realVisible, activeAnimation, onAnimationEnd] = useAnimationVisible(visible, afterClose);\n\n  useIsomorphicLayoutEffect(() => {\n    // 显示弹出层，修正正确的指向\n    if (realVisible) {\n      updateState({\n        pause: true,\n        x: index * -(innerWidth + horizontalOffset),\n      });\n      virtualIndexRef.current = index;\n      return;\n    }\n    // 关闭后清空状态\n    updateState(initialState);\n  }, [realVisible]);\n\n\n\n  const { close, changeIndex } = useMethods({\n    close(evt?: React.MouseEvent | React.TouchEvent) {\n      if (onRotate) {\n        onRotate(0);\n      }\n      updateState({\n        overlay: true,\n        // 记录当前关闭时的透明度\n        lastBg: bg,\n      });\n      onClose(evt);\n    },\n    changeIndex(nextIndex: number, isPause: boolean = false) {\n\n      const currentIndex = enableLoop ? virtualIndexRef.current + (nextIndex - index) : nextIndex;\n      const max = imageLength - 1;\n      // 虚拟 index\n      // 非循环模式，限制区间\n      const limitIndex = limitNumber(currentIndex, 0, max);\n      const nextVirtualIndex = enableLoop ? currentIndex : limitIndex;\n      // 单个屏幕宽度\n      const singlePageWidth = innerWidth + horizontalOffset;\n\n      const currentTranslateX = -singlePageWidth * virtualIndexRef.current;\n\n\n      updateState({\n        touched: false,\n        x: currentTranslateX,\n        lastCX: undefined,\n        lastCY: undefined,\n        bg: maskOpacity,\n        overlay: overlay\n      });\n      // 当前索引\n\n\n      updateState({\n        touched: false,\n        lastCX: undefined,\n        lastCY: undefined,\n        x: -singlePageWidth * nextVirtualIndex,\n        pause: isPause,\n      });\n\n\n      virtualIndexRef.current = nextVirtualIndex;\n      // 更新真实的 index\n      const realLoopIndex = nextIndex < 0 ? max : nextIndex > max ? 0 : nextIndex;\n      if (onIndexChange) {\n        onIndexChange(enableLoop ? realLoopIndex : limitIndex);\n      }\n      // indexController?.goToIndex(enableLoop ? realLoopIndex : limitIndex);\n    },\n  });\n\n  useEventListener('keydown', (evt: KeyboardEvent) => {\n    if (visible) {\n      switch (evt.key) {\n        case 'ArrowLeft':\n          changeIndex(index - 1, true);\n          break;\n        case 'ArrowRight':\n          changeIndex(index + 1, true);\n          break;\n        case 'Escape':\n          close();\n          break;\n        default:\n      }\n    }\n  });\n\n  function handlePhotoTap(closeable: boolean | undefined) {\n    return closeable ? close() : updateState({ overlay: !overlay });\n  }\n\n  function handleResize() {\n    updateState({\n      x: -(innerWidth + horizontalOffset) * index,\n      lastCX: undefined,\n      lastCY: undefined,\n      pause: true,\n    });\n    virtualIndexRef.current = index;\n  }\n\n  function handleReachVerticalMove(clientY: number, nextScale?: number) {\n    if (lastCY === undefined) {\n      updateState({\n        touched: true,\n        lastCY: clientY,\n        bg,\n        minimal: true,\n      });\n      return;\n    }\n    const opacity =\n      maskOpacity === null ? null : limitNumber(maskOpacity, 0.01, maskOpacity - Math.abs(clientY - lastCY) / 100 / 4);\n\n    updateState({\n      touched: true,\n      lastCY,\n      bg: nextScale === 1 ? opacity : maskOpacity,\n      minimal: nextScale === 1,\n    });\n  }\n\n  function handleReachHorizontalMove(clientX: number) {\n    if (lastCX === undefined) {\n      updateState({\n        touched: true,\n        lastCX: clientX,\n        x,\n        pause: false,\n      });\n      return;\n    }\n    const originOffsetClientX = clientX - lastCX;\n    let offsetClientX = originOffsetClientX;\n\n    // 第一张和最后一张超出距离减半\n    if (\n      !enableLoop &&\n      ((index === 0 && originOffsetClientX > 0) || (index === imageLength - 1 && originOffsetClientX < 0))\n    ) {\n      offsetClientX = originOffsetClientX / 2;\n    }\n\n    updateState({\n      touched: true,\n      lastCX,\n      x: -(innerWidth + horizontalOffset) * virtualIndexRef.current + offsetClientX,\n      pause: false,\n    });\n  }\n\n  function handleReachMove(reachPosition: ReachType, clientX: number, clientY: number, nextScale?: number) {\n    if (reachPosition === 'x') {\n      handleReachHorizontalMove(clientX);\n    } else if (reachPosition === 'y') {\n      handleReachVerticalMove(clientY, nextScale);\n    }\n  }\n\n  function handleReachUp(clientX: number, clientY: number) {\n    const offsetClientX = clientX - (lastCX ?? clientX);\n    const offsetClientY = clientY - (lastCY ?? clientY);\n    let willClose = false;\n    // 下一张\n    console.log('handleReachUp');\n    if (offsetClientX < -maxMoveOffset) {\n      changeIndex(index + 1);\n      return;\n    }\n    // 上一张\n    if (offsetClientX > maxMoveOffset) {\n      changeIndex(index - 1);\n      return;\n    }\n    const singlePageWidth = innerWidth + horizontalOffset;\n    // 当前偏移\n    const currentTranslateX = -singlePageWidth * virtualIndexRef.current;\n\n    if (Math.abs(offsetClientY) > 100 && minimal && pullClosable) {\n      willClose = true;\n      close();\n    }\n\n    updateState({\n      touched: false,\n      x: currentTranslateX,\n      lastCX: undefined,\n      lastCY: undefined,\n      bg: maskOpacity,\n      overlay: willClose ? true : overlay,\n    });\n  }\n  // 截取相邻的图片\n  const adjacentImages = useAdjacentImages(images, index, enableLoop);\n\n  // useEffect(() => {\n  //   if (!realVisible || !images) return;\n\n  //   requestAnimationFrame(async() => {\n  //     const canvasEl = document.getElementById('canvas');\n  //     if (!canvasEl) return;\n\n  //     const webgl = await init(images.map((item: DataType) => item.src), index);\n  //     setIndexController(webgl);\n  //   });\n  // }, [realVisible, images]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      document.querySelector('.Slider_scale')?.classList.remove('slider-transitions')\n    },100)\n\n  },[index])\n\n  if (!realVisible) {\n    return null;\n  }\n\n  const currentOverlayVisible = overlay && !activeAnimation;\n  // 关闭过程中使用下拉保存的透明度\n  const currentOpacity = visible ? bg : lastBg;\n  // 覆盖物参数\n  const overlayParams: OverlayRenderProps | undefined = onScale &&\n    onRotate && {\n    images,\n    index,\n    visible,\n    onClose: close,\n    onIndexChange: changeIndex,\n    overlayVisible: currentOverlayVisible,\n    overlay: currentImage && currentImage.overlay,\n    scale,\n    rotate,\n    onScale,\n    onRotate,\n  };\n  // 动画时间\n\n\n  const currentSpeed = speedFn ? speedFn(activeAnimation) : defaultSpeed;\n  const currentEasing = easingFn ? easingFn(activeAnimation) : defaultEasing;\n  const slideSpeed = speedFn ? speedFn(3) : defaultSpeed + 200;\n  const slideEasing = easingFn ? easingFn(3) : defaultEasing;\n\n\n\n\n  return (\n    <SlidePortal\n      className={`PhotoView-Portal${!currentOverlayVisible ? ' PhotoView-Slider__clean' : ''}${!visible ? ' PhotoView-Slider__willClose' : ''\n        }${className ? ` ${className}` : ''}`}\n      role=\"dialog\"\n      onClick={(e) => e.stopPropagation()}\n      container={portalContainer}\n    >\n      {visible && <PreventScroll />}\n      <div\n        className={`PhotoView-Slider__Backdrop${maskClassName ? ` ${maskClassName}` : ''}${activeAnimation === 1\n          ? ' PhotoView-Slider__fadeIn'\n          : activeAnimation === 2\n            ? ' PhotoView-Slider__fadeOut'\n            : ''\n          }`}\n        style={{\n          background: currentOpacity ? `rgba(0, 0, 0, ${currentOpacity})` : undefined,\n          transitionTimingFunction: currentEasing,\n          transitionDuration: `${touched ? 0 : currentSpeed}ms`,\n          animationDuration: `${currentSpeed}ms`,\n        }}\n        onAnimationEnd={onAnimationEnd}\n      />\n      {bannerVisible && (\n        <div className=\"PhotoView-Slider__BannerWrap\">\n          <div className=\"PhotoView-Slider__Counter\">\n            {index + 1} / {imageLength}\n          </div>\n          <div className=\"PhotoView-Slider__BannerRight\">\n            {toolbarRender && overlayParams && toolbarRender(overlayParams)}\n            <CloseIcon className=\"close\" onClick={close} />\n          </div>\n        </div>\n      )}\n      {/* <div id=\"wrap-texture\">\n        <div id=\"canvas\"></div>\n        <div id=\"wrap-texture-box\">\n        </div>\n      </div> */}\n      <div className=\"Slider_scale\">\n        {adjacentImages.map((item: DataType, currentIndex) => {\n          // 截取之前的索引位置\n          const nextIndex =\n            !enableLoop && index === 0 ? index + currentIndex : virtualIndexRef.current - 1 + currentIndex;\n\n          return (\n            <PhotoBox\n              key={enableLoop ? `${item.key}/${item.src}/${nextIndex}` : item.key}\n              item={item}\n              speed={currentSpeed}\n              easing={currentEasing}\n              visible={visible}\n              // onReachMove={handleReachMove}\n              // onReachUp={handleReachUp}\n              onPhotoTap={() => handlePhotoTap(photoClosable)}\n              onMaskTap={() => handlePhotoTap(maskClosable)}\n              wrapClassName={photoWrapClassName}\n              className={photoClassName}\n              style={{\n                left: `${(innerWidth + horizontalOffset) * nextIndex}px`,\n                transform: `translate3d(${x}px, 0px, 0)`,\n                transition: touched || pause ? undefined : `transform ${slideSpeed}ms ${slideEasing}`,\n              }}\n              loadingElement={loadingElement}\n              brokenElement={brokenElement}\n              onPhotoResize={handleResize}\n              isActive={virtualIndexRef.current === nextIndex}\n              expose={updateState}\n            />\n          );\n        })}\n      </div>\n      {\n        !isTouchDevice && bannerVisible && (\n          <>\n            {(enableLoop || index !== 0) && (\n              <div className=\"PhotoView-Slider__ArrowLeft\" onClick={() => {\n                document.querySelector('.Slider_scale')?.classList.add('slider-transitions')\n                changeIndex(index - 1)\n              }}>\n                <ArrowLeft />\n              </div>\n            )}\n            {(enableLoop || index + 1 < imageLength) && (\n              <div className=\"PhotoView-Slider__ArrowRight\" onClick={() => {\n                document.querySelector('.Slider_scale')?.classList.add('slider-transitions')\n                changeIndex(index + 1)\n              }}>\n                <ArrowRight />\n              </div>\n            )}\n          </>\n        )\n      }\n      {\n        overlayRender && overlayParams && (\n          <div className=\"PhotoView-Slider__Overlay\">{overlayRender(overlayParams)}</div>\n        )\n      }\n    </SlidePortal >\n  );\n}\n","import { useReducer, useRef } from 'react';\nimport type { ActiveAnimationType } from '../types';\nimport useForkedVariable from './useForkedVariable';\n\n/**\n * 动画关闭处理真实关闭状态\n * 通过 onAnimationEnd 回调实现 leaveCallback\n */\nexport default function useAnimationVisible(\n  visible: boolean | undefined,\n  afterClose?: () => void,\n): [realVisible: boolean | undefined, activeAnimation: ActiveAnimationType, onAnimationEnd: () => void] {\n  const [, handleRender] = useReducer((c) => !c, false);\n\n  const activeAnimation = useRef<ActiveAnimationType>(0);\n\n  // 可见状态分支\n  const [realVisible, modifyRealVisible] = useForkedVariable(visible, (modify) => {\n    // 可见状态：设置进入动画\n    if (visible) {\n      modify(visible);\n      activeAnimation.current = 1;\n    } else {\n      activeAnimation.current = 2;\n    }\n  });\n\n  function onAnimationEnd() {\n    // 动画结束后触发渲染\n    handleRender();\n    // 结束动画：设置隐藏状态\n    if (activeAnimation.current === 2) {\n      modifyRealVisible(false);\n      // 触发隐藏回调\n      if (afterClose) {\n        afterClose();\n      }\n    }\n    // 重置状态\n    activeAnimation.current = 0;\n  }\n\n  return [\n    /**\n     * 真实可见状态\n     */\n    realVisible,\n    /**\n     * 正在进行的动画\n     */\n    activeAnimation.current,\n    /**\n     * 动画结束后回调\n     */\n    onAnimationEnd,\n  ];\n}\n","import { useRef, useMemo } from 'react';\n\n/**\n * 逻辑分叉变量处理\n * 此 hook 不触发额外渲染\n */\nexport default function useForkedVariable<T>(initial: T, updater: (modify: (variable: T) => void) => void) {\n  // 初始分叉变量\n  const forkedRef = useRef(initial);\n\n  function modify(next: T) {\n    forkedRef.current = next;\n  }\n\n  useMemo(() => {\n    // 参数变化之后同步内部分叉变量\n    updater(modify);\n  }, [initial]);\n\n  return [forkedRef.current, modify] as const;\n}\n","import { useMemo } from 'react';\nimport type { DataType } from '../types';\n\n/**\n * 截取相邻三张图片\n */\nexport default function useAdjacentImages(images: DataType[], index: number, loop: boolean) {\n  return useMemo(() => {\n    const imageLength = images.length;\n    if (loop) {\n      const connected = images.concat(images).concat(images);\n      return connected.slice(imageLength + index - 1, imageLength + index + 2);\n    }\n    return images.slice(Math.max(index - 1, 0), Math.min(index + 2, imageLength + 1));\n  }, [images, index, loop]);\n}\n","import React, { useMemo, useRef } from 'react';\nimport type { DataType, PhotoProviderBase } from './types';\nimport useMethods from './hooks/useMethods';\nimport useSetState from './hooks/useSetState';\nimport PhotoContext from './photo-context';\nimport PhotoSlider from './PhotoSlider';\n\nexport interface PhotoProviderProps extends PhotoProviderBase {\n  children: React.ReactNode;\n  onIndexChange?: (index: number, state: PhotoProviderState) => void;\n  onVisibleChange?: (visible: boolean, index: number, state: PhotoProviderState) => void;\n}\n\ntype PhotoProviderState = {\n  images: DataType[];\n  visible: boolean;\n  index: number;\n};\n\nconst initialState: PhotoProviderState = {\n  images: [],\n  visible: false,\n  index: 0,\n};\n\nexport default function PhotoProvider({ children, onIndexChange, onVisibleChange, ...restProps }: PhotoProviderProps) {\n  const [state, updateState] = useSetState(initialState);\n  const uniqueIdRef = useRef(0);\n  const { images, visible, index } = state;\n\n  const methods = useMethods({\n    nextId() {\n      return (uniqueIdRef.current += 1);\n    },\n    update(imageItem: DataType) {\n      const currentIndex = images.findIndex((n) => n.key === imageItem.key);\n      if (currentIndex > -1) {\n        const nextImages = images.slice();\n        nextImages.splice(currentIndex, 1, imageItem);\n        updateState({\n          images: nextImages,\n        });\n        return;\n      }\n      updateState((prev) => ({\n        images: prev.images.concat(imageItem),\n      }));\n    },\n    remove(key: number) {\n      updateState((prev) => {\n        const nextImages = prev.images.filter((item) => item.key !== key);\n        const nextEndIndex = nextImages.length - 1;\n        return {\n          images: nextImages,\n          index: Math.min(nextEndIndex, index),\n        };\n      });\n    },\n    show(key: number) {\n      const currentIndex = images.findIndex((item) => item.key === key);\n      updateState({\n        visible: true,\n        index: currentIndex,\n      });\n      if (onVisibleChange) {\n        onVisibleChange(true, currentIndex, state);\n      }\n    },\n  });\n\n  const fn = useMethods({\n    close() {\n      updateState({\n        visible: false,\n      });\n\n      if (onVisibleChange) {\n        onVisibleChange(false, index, state);\n      }\n    },\n    changeIndex(nextIndex: number) {\n      updateState({\n        index: nextIndex,\n      });\n\n      if (onIndexChange) {\n        onIndexChange(nextIndex, state);\n      }\n    },\n  });\n\n  const value = useMemo(() => ({ ...state, ...methods }), [state, methods]);\n\n  return (\n    <PhotoContext.Provider value={value}>\n      {children}\n      <PhotoSlider\n        images={images}\n        visible={visible}\n        index={index}\n        onIndexChange={fn.changeIndex}\n        onClose={fn.close}\n        {...restProps}\n      />\n    </PhotoContext.Provider>\n  );\n}\n","import type React from 'react';\nimport { useImperativeHandle, Children, cloneElement, useContext, useEffect, useMemo, useRef } from 'react';\nimport useInitial from './hooks/useInitial';\nimport useMethods from './hooks/useMethods';\nimport type { PhotoContextType } from './photo-context';\nimport PhotoContext from './photo-context';\nimport type { PhotoRenderParams } from './types';\n\nexport interface PhotoViewProps {\n  /**\n   * 图片地址\n   */\n  src?: string;\n  /**\n   * 自定义渲染，优先级比 src 低\n   */\n  render?: (props: PhotoRenderParams) => React.ReactNode;\n  /**\n   * 自定义覆盖节点\n   */\n  overlay?: React.ReactNode;\n  /**\n   * 自定义渲染节点宽度\n   */\n  width?: number;\n  /**\n   * 自定义渲染节点高度\n   */\n  height?: number;\n  /**\n   * 子节点，一般为缩略图\n   */\n  children?: React.ReactElement;\n  /**\n   * 触发的事件\n   */\n  triggers?: ('onClick' | 'onDoubleClick')[];\n}\n\nconst PhotoView: React.FC<PhotoViewProps> = ({\n  src,\n  render,\n  overlay,\n  width,\n  height,\n  triggers = ['onClick'],\n  children,\n}) => {\n  const photoContext = useContext<PhotoContextType>(PhotoContext);\n  const key = useInitial(() => photoContext.nextId());\n  const originRef = useRef<HTMLElement>(null);\n\n  useImperativeHandle((children as React.FunctionComponentElement<HTMLElement>)?.ref, () => originRef.current);\n\n  useEffect(() => {\n    return () => {\n      photoContext.remove(key);\n    };\n  }, []);\n\n  function invokeChildrenFn(eventName: string, e: React.SyntheticEvent) {\n    if (children) {\n      const eventFn = children.props[eventName];\n      if (eventFn) {\n        eventFn(e);\n      }\n    }\n  }\n\n  const fn = useMethods({\n    render(props: PhotoRenderParams) {\n      return render && render(props);\n    },\n    show(eventName: string, e: React.MouseEvent) {\n      photoContext.show(key);\n      invokeChildrenFn(eventName, e);\n    },\n  });\n\n  const eventListeners = useMemo(() => {\n    const listener = {};\n    triggers.forEach((eventName) => {\n      listener[eventName] = fn.show.bind(null, eventName);\n    });\n    return listener;\n  }, []);\n\n  useEffect(() => {\n    photoContext.update({\n      key,\n      src,\n      originRef,\n      render: fn.render,\n      overlay,\n      width,\n      height,\n    });\n  }, [src]);\n\n  if (children) {\n    return Children.only(cloneElement(children, { ...eventListeners, ref: originRef }  as React.HTMLProps<HTMLElement>));\n  }\n  return null;\n};\n\nexport default PhotoView;","import { useRef } from 'react';\n\nexport default function useInitial<T extends (...args: any) => any>(callback: T) {\n  const { current } = useRef({ sign: false, fn: undefined as ReturnType<T> });\n  if (!current.sign) {\n    current.sign = true;\n    current.fn = callback();\n  }\n  return current.fn;\n}\n"],"names":["useMethods","fn","current","useRef","curr","undefined","Object","create","keys","forEach","key","_current$fn$key","call","apply","concat","slice","arguments","useSetState","initialState","useReducer","state","action","_extends","createContext","defaultEasing","isTouchDevice","window","limitNumber","value","min","max","Math","limitScale","scale","buffer","test","navigator","userAgent","useEffect","useLayoutEffect","useEventListener","type","options","latest","wrapper","evt","addEventListener","removeEventListener","SlidePortal","_ref","_ref$container","container","document","body","rest","_objectWithoutPropertiesLoose","_excluded","createPortal","_jsx","CloseIcon","props","_jsxs","className","children","jsx","ArrowLeft","width","height","viewBox","d","ArrowRight","PreventScroll","style","lastOverflow","overflow","getMultipleTouchPosition","_evt$touches$","touches","clientX","clientY","length","_evt$touches$2","nextClientX","nextClientY","sqrt","pow","computePositionEdge","position","size","innerSize","closedEdge","currentWidth","outOffset","getPositionOnMoveOrScale","x","y","toScale","offsetX","offsetY","innerWidth","innerHeight","closedEdgeX","_computePositionEdge2","centerClientX","centerClientY","lastCX","lastCY","getRotateSize","rotate","isVertical","getSuitableImageSize","naturalWidth","naturalHeight","_getRotateSize","currentHeight","pause","useDebounceCallback","callback","_ref$leading","leading","maxWait","_ref$wait","wait","callbackRef","prev","trailingTimeout","clearTrailing","clearTimeout","useCallback","args","now","Date","last","offset","setTimeout","cancel","rebound","start","bound","easeOutMove","defaultSpeed","t","easeOutQuart","end","speed","easing","complete","distance","startTime","frameId","calcMove","time","raf","cancelAnimationFrame","requestAnimationFrame","initialRect","T","L","W","H","FIT","useMountedRef","mountedRef","Spinner","_ref$className","fill","opacity","Photo","src","loaded","broken","onPhotoLoad","loadingElement","brokenElement","restProps","jsxs","_Fragment","onLoad","e","_e$target","target","onError","draggable","alt","touched","maskTouched","CX","CY","lastX","lastY","lastScale","touchTime","touchLength","stopRaf","reach","PhotoBox","_ref$item","item","render","_ref$item$width","customWidth","_ref$item$height","customHeight","originRef","visible","wrapClassName","onPhotoTap","onMaskTap","onReachMove","onReachUp","onPhotoResize","isActive","expose","_useSetState","updateState","initialTouchRef","mounted","_state$naturalWidth","_state$naturalHeight","_state$width","_state$height","_state$loaded","onScale","onRotate","handleMove","currentTouchLength","isStillX","abs","isStillY","currentReach","horizontalCloseEdge","initialTouchState","verticalCloseEdge","reachPosition","getReachType","updateRaf","singleTap","doubleTap","continuousClick","debounceTap","callbackX","callbackY","callbackS","slideToPosition","nextX","nextY","nextScale","X","spatial","Y","S","safeScale","touchedTime","_computePositionEdge","beginEdgeX","beginX","beginEdgeY","beginY","moveTime","_getPositionOnMoveOrS","targetX","targetY","speedX","speedY","speedT","edgeX","edgeY","initialSpeed","lastTime","v","s","dt","direction","sign","a","f","ds","caf","scrollMove","_computePositionEdge3","isEdgeX","currentX","_computePositionEdge4","isEdgeY","currentY","resultX","resultY","handlePhotoTap","currentClientX","currentClientY","handleUp","handleStart","handleMaskStart","preventDefault","passive","_ref2","touch","changedTouches","useIsomorphicLayoutEffect","_useAnimationPosition","updateEasing","_useTargetScale","realWidth","realHeight","realScale","execRef","lead","_useSetState$","moveScale","Promise","resolve","reject","useTargetScale","autoWidth","autoHeight","autoScale","_useAnimationOrigin","_useState","useState","originRect","updateOriginRect","_useState2","easingMode","updateEasingMode","initialTime","OK","handleToShape","currentShape","element","nodeType","_element$getBoundingC","getBoundingClientRect","top","left","tagName","getComputedStyle","objectFit","handleUpdateOrigin","useAnimationOrigin","centerWidth","centerHeight","miniMode","useAnimationPosition","isPause","currentScale","transitionCSS","attrs","onMouseDown","stopPropagation","button","onTouchStart","onWheel","deltaY","transform","transition","translateY","willChange","params","bg","lastBg","overlay","minimal","PhotoSlider","_props$loop","loop","speedFn","easingFn","photoClosable","_props$maskClosable","maskClosable","_props$maskOpacity","maskOpacity","defaultOpacity","_props$bannerVisible","bannerVisible","overlayRender","toolbarRender","maskClassName","photoClassName","photoWrapClassName","images","_props$index","index","controlledIndex","controlledIndexChange","onIndexChange","onClose","afterClose","portalContainer","innerIndex","updateInnerIndex","_state$bg","isControlled","hasOwnProperty","virtualIndexRef","imageLength","currentImage","enableLoop","_useAnimationVisible","handleRender","c","activeAnimation","_useForkedVariable","initial","forkedRef","modify","next","useMemo","updater","useForkedVariable","modifyRealVisible","useAnimationVisible","realVisible","onAnimationEnd","_useMethods","close","changeIndex","nextIndex","currentIndex","limitIndex","nextVirtualIndex","singlePageWidth","closeable","handleResize","adjacentImages","useAdjacentImages","_document$querySelect","querySelector","classList","remove","currentOverlayVisible","currentOpacity","overlayParams","overlayVisible","currentSpeed","currentEasing","slideSpeed","slideEasing","role","onClick","background","transitionTimingFunction","transitionDuration","animationDuration","map","_document$querySelect2","add","_document$querySelect3","onVisibleChange","uniqueIdRef","methods","nextId","update","imageItem","findIndex","n","nextImages","splice","filter","show","PhotoContext","Provider","_ref$triggers","triggers","photoContext","useContext","useImperativeHandle","ref","eventName","eventFn","invokeChildrenFn","eventListeners","listener","bind","Children","only","cloneElement"],"mappings":"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"}