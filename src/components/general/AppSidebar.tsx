import { useEffect, useState } from 'react';

interface NavItem {
  id: string;
  label: string;
  icon: React.ReactNode;
}

const navItems: NavItem[] = [
  {
    id: 'intro',
    label: 'Главная',
    icon: (
      <svg width="38" height="48" viewBox="0 0 38 48" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M11.8253 16.492C7.89215 19.5125 4.52169 22.1007 4.33998 22.241L4 22.5039L5.03751 23.8418L6.07503 25.1856L6.28019 25.022C6.39742 24.9285 9.30481 22.6967 12.7515 20.0617L19.0059 15.265L25.2661 20.0617C28.7069 22.6967 31.6143 24.9285 31.7315 25.022L31.9367 25.1856L32.9683 23.8476L34 22.5156L33.8769 22.3987C33.8066 22.3403 32.8453 21.5983 31.7433 20.7511L29.7327 19.2204V13.7986L27.5815 13.8103L25.4244 13.8278L25.4068 14.8327C25.4009 15.3877 25.3775 15.8434 25.3599 15.8434C25.3423 15.8434 23.9062 14.7509 22.1712 13.4188C20.4302 12.0867 19 10.9942 18.9941 11C18.9824 11 15.7585 13.4714 11.8253 16.492Z" fill="currentColor" />
        <path d="M13.8359 21.4405L8.68933 25.3901V36H16.9543V28.2295H21.4091V36H29.3224V25.3901L24.1876 21.4464C21.3623 19.2788 19.0293 17.5027 19.0117 17.4969C18.9941 17.491 16.6612 19.2671 13.8359 21.4405Z" fill="currentColor" />
      </svg>
    )
  },
  {
    id: 'documents',
    label: 'Услуги',
    icon: (
      <svg width="34" height="34" viewBox="0 0 34 34" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M18.7143 11.3125V4H11C10.318 4 9.66396 4.25681 9.18173 4.71393C8.69949 5.17105 8.42857 5.79103 8.42857 6.4375V18.625H17.8571C18.5391 18.625 19.1932 18.8818 19.6754 19.3389C20.1577 19.796 20.4286 20.416 20.4286 21.0625C20.4286 21.709 20.1577 22.329 19.6754 22.7861C19.1932 23.2432 18.5391 23.5 17.8571 23.5H8.42857V27.5625C8.42857 28.209 8.69949 28.829 9.18173 29.2861C9.66396 29.7432 10.318 30 11 30H26.4286C27.1106 30 27.7646 29.7432 28.2468 29.2861C28.7291 28.829 29 28.209 29 27.5625V13.75H21.2857C20.6037 13.75 19.9497 13.4932 19.4674 13.0361C18.9852 12.579 18.7143 11.959 18.7143 11.3125ZM11.8571 16.1875C11.8571 15.972 11.9474 15.7653 12.1082 15.613C12.2689 15.4606 12.487 15.375 12.7143 15.375H24.7143C24.9416 15.375 25.1596 15.4606 25.3204 15.613C25.4811 15.7653 25.5714 15.972 25.5714 16.1875C25.5714 16.403 25.4811 16.6097 25.3204 16.762C25.1596 16.9144 24.9416 17 24.7143 17H12.7143C12.487 17 12.2689 16.9144 12.1082 16.762C11.9474 16.6097 11.8571 16.403 11.8571 16.1875ZM11.8571 25.9375C11.8571 25.722 11.9474 25.5153 12.1082 25.363C12.2689 25.2106 12.487 25.125 12.7143 25.125H24.7143C24.9416 25.125 25.1596 25.2106 25.3204 25.363C25.4811 25.5153 25.5714 25.722 25.5714 25.9375C25.5714 26.153 25.4811 26.3597 25.3204 26.512C25.1596 26.6644 24.9416 26.75 24.7143 26.75H12.7143C12.487 26.75 12.2689 26.6644 12.1082 26.512C11.9474 26.3597 11.8571 26.153 11.8571 25.9375ZM20.4286 11.3125V4.40625L28.5714 12.125H21.2857C21.0584 12.125 20.8404 12.0394 20.6796 11.887C20.5189 11.7347 20.4286 11.528 20.4286 11.3125ZM5.85714 20.25C5.62981 20.25 5.4118 20.3356 5.25105 20.488C5.09031 20.6403 5 20.847 5 21.0625C5 21.278 5.09031 21.4847 5.25105 21.637C5.4118 21.7894 5.62981 21.875 5.85714 21.875H17.8571C18.0845 21.875 18.3025 21.7894 18.4632 21.637C18.624 21.4847 18.7143 21.278 18.7143 21.0625C18.7143 20.847 18.624 20.6403 18.4632 20.488C18.3025 20.3356 18.0845 20.25 17.8571 20.25H5.85714Z" fill="currentColor" />
      </svg>
    )
  },
  {
    id: 'skills',
    label: 'Преимущества',
    icon: (
      <svg width="34" height="34" viewBox="0 0 34 34" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M9.05392 13.3743L9.05108 13.3771L9.04542 13.3813L9.03125 13.3927C8.96977 13.4393 8.91022 13.4885 8.85275 13.54C8.70443 13.6714 8.5617 13.8089 8.42492 13.9523C8.08491 14.3107 7.64858 14.8433 7.23917 15.5559C6.41467 16.9938 5.72192 19.1373 6.1115 22.0032C6.49542 24.8323 7.684 27.1967 9.69283 28.8457C11.696 30.489 14.4075 31.3333 17.6871 31.3333C21.0687 31.3333 23.7688 30.0654 25.5552 27.8908C27.3261 25.7361 28.1166 22.7965 27.9282 19.5835C27.7468 16.5008 26.0681 14.1619 24.5848 12.0964L24.1612 11.5057C22.5434 9.222 21.267 7.11825 21.5772 4.17442C21.5929 4.02625 21.5773 3.87645 21.5313 3.73472C21.4854 3.593 21.4101 3.46253 21.3105 3.35178C21.2108 3.24103 21.089 3.15248 20.9528 3.09187C20.8167 3.03127 20.6694 2.99997 20.5204 3C19.9792 3 19.3587 3.16717 18.7609 3.41933C18.0686 3.71614 17.4154 4.09676 16.8158 4.55267C15.5054 5.5415 14.195 7.03183 13.4966 9.02367C12.7996 11.0098 13.1537 12.9025 13.6637 14.2809C13.9995 15.1862 13.6354 16.0801 13.0872 16.3408C12.8539 16.4511 12.587 16.467 12.3422 16.3852C12.0975 16.3033 11.8939 16.1301 11.7739 15.9016L10.6321 13.7327C10.5606 13.5966 10.4605 13.4777 10.3386 13.384C10.2167 13.2904 10.076 13.2244 9.92606 13.1904C9.77616 13.1565 9.62069 13.1555 9.47036 13.1875C9.32004 13.2194 9.17844 13.2837 9.05533 13.3757" fill="currentColor" />
      </svg>
    )
  },
  {
    id: 'slider',
    label: 'Отрасли',
    icon: (
      <svg width="34" height="34" viewBox="0 0 34 34" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M13.1042 5.84391V8.50016H20.8958V5.84391C20.8958 5.68113 20.8638 5.51994 20.8015 5.36954C20.7392 5.21915 20.6479 5.0825 20.5328 4.9674C20.4177 4.85229 20.281 4.76098 20.1306 4.69869C19.9802 4.63639 19.819 4.60433 19.6562 4.60433H14.3438C14.015 4.60433 13.6997 4.73493 13.4672 4.9674C13.2348 5.19986 13.1042 5.51515 13.1042 5.84391ZM11.3333 8.50016V5.84391C11.3333 5.0455 11.6505 4.27979 12.2151 3.71523C12.7796 3.15066 13.5453 2.8335 14.3438 2.8335H19.6562C20.4547 2.8335 21.2204 3.15066 21.7849 3.71523C22.3495 4.27979 22.6667 5.0455 22.6667 5.84391V8.50016H25.3229C26.4971 8.50016 27.6231 8.96659 28.4533 9.79683C29.2836 10.6271 29.75 11.7531 29.75 12.9272V15.4064C29.75 16.1109 29.4701 16.7865 28.972 17.2847C28.4739 17.7828 27.7982 18.0627 27.0938 18.0627H19.8333V17.7085C19.8333 17.3328 19.6841 16.9724 19.4184 16.7068C19.1527 16.4411 18.7924 16.2918 18.4167 16.2918H15.5833C15.2076 16.2918 14.8473 16.4411 14.5816 16.7068C14.3159 16.9724 14.1667 17.3328 14.1667 17.7085V18.0627H6.90625C6.20177 18.0627 5.52614 17.7828 5.028 17.2847C4.52985 16.7865 4.25 16.1109 4.25 15.4064V12.9272C4.25 11.7531 4.71642 10.6271 5.54666 9.79683C6.3769 8.96659 7.50295 8.50016 8.67708 8.50016H11.3333ZM14.1667 19.8335H6.90625C5.94811 19.835 5.01559 19.5242 4.25 18.9481V23.9064C4.25 25.0805 4.71642 26.2066 5.54666 27.0368C6.3769 27.8671 7.50295 28.3335 8.67708 28.3335H25.3229C26.4971 28.3335 27.6231 27.8671 28.4533 27.0368C29.2836 26.2066 29.75 25.0805 29.75 23.9064V18.9481C28.9844 19.5242 28.0519 19.835 27.0938 19.8335H19.8333V20.5418C19.8333 20.9176 19.6841 21.2779 19.4184 21.5436C19.1527 21.8092 18.7924 21.9585 18.4167 21.9585H15.5833C15.2076 21.9585 14.8473 21.8092 14.5816 21.5436C14.3159 21.2779 14.1667 20.9176 14.1667 20.5418V19.8335Z" fill="currentColor" />
      </svg>
    )
  },
  {
    id: 'safeguards',
    label: 'Гарантии',
    icon: (
      <svg width="34" height="34" viewBox="0 0 34 34" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path fillRule="evenodd" clipRule="evenodd" d="M18.4279 4.38064C18.1818 4.13692 17.848 4 17.5 4C17.152 4 16.8182 4.13692 16.5721 4.38064C15.5089 5.43368 13.9825 6.05771 12.3944 6.38272C10.8167 6.70513 9.31394 6.70253 8.45688 6.60763C8.27345 6.58752 8.0878 6.60596 7.91205 6.66173C7.7363 6.7175 7.5744 6.80936 7.43692 6.93131C7.29944 7.05325 7.18947 7.20255 7.11418 7.36944C7.03889 7.53634 6.99999 7.71708 7 7.89988V19.6004C7 21.2904 7.7455 22.7842 8.7115 24.014C9.68012 25.2465 10.9388 26.306 12.1437 27.1589C13.6533 28.2161 15.2619 29.1273 16.9474 29.8799L16.9711 29.8903L16.9789 29.8942H16.9829C17.1462 29.9638 17.3221 29.9998 17.4999 30C17.6777 30.0002 17.8536 29.9647 18.0171 29.8955L17.5 28.7007C18.0171 29.8968 18.0184 29.8955 18.0184 29.8955L18.0211 29.8942L18.0276 29.8903L18.0539 29.8799L18.1392 29.8422C18.6134 29.6281 19.0817 29.4014 19.5436 29.1623C20.6919 28.5688 21.7987 27.8995 22.8563 27.1589C24.0612 26.306 25.3199 25.2478 26.2885 24.014C27.2545 22.7855 28 21.2904 28 19.6004V7.89988C28 7.71708 27.9611 7.53634 27.8858 7.36944C27.8105 7.20255 27.7006 7.05325 27.5631 6.93131C27.4256 6.80936 27.2637 6.7175 27.0879 6.66173C26.9122 6.60596 26.7266 6.58752 26.5431 6.60763C25.6861 6.70253 24.1833 6.70513 22.6056 6.38272C21.0175 6.05771 19.4911 5.43368 18.4279 4.38064Z" fill="currentColor" />
      </svg>
    )
  },
  {
    id: 'feedback',
    label: 'Отзывы',
    icon: (
      <svg width="34" height="34" viewBox="0 0 34 34" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M18.3333 3V11.0004C18.3332 11.3507 18.402 11.6977 18.5359 12.0214C18.6699 12.3451 18.8663 12.6392 19.1139 12.887C19.3616 13.1348 19.6556 13.3313 19.9792 13.4654C20.3028 13.5995 20.6497 13.6686 21 13.6686H29V27.0039C29 27.7112 28.719 28.3895 28.219 28.8896C27.7189 29.3898 27.0406 29.6707 26.3333 29.6707H14.3333V24.7758C15.1558 23.7596 15.6239 22.5026 15.6664 21.196C15.7089 19.8894 15.3236 18.6046 14.569 17.5371C13.8144 16.4696 12.7318 15.6777 11.4859 15.282C10.24 14.8862 8.89893 14.9082 7.66667 15.3446V5.66681C7.66667 4.95952 7.94762 4.28121 8.44772 3.78109C8.94781 3.28097 9.62609 3 10.3333 3H18.3333ZM20.3333 3.6667V11.0004C20.3333 11.1772 20.4036 11.3468 20.5286 11.4718C20.6536 11.5969 20.8232 11.6671 21 11.6671H28.3333L20.3333 3.6667ZM14.3333 21.0036C14.3333 21.6165 14.2126 22.2233 13.9781 22.7896C13.7436 23.3558 13.3998 23.8702 12.9665 24.3036C12.5332 24.737 12.0187 25.0807 11.4525 25.3153C10.8863 25.5498 10.2795 25.6705 9.66667 25.6705C9.05383 25.6705 8.447 25.5498 7.88081 25.3153C7.31462 25.0807 6.80018 24.737 6.36683 24.3036C5.93349 23.8702 5.58975 23.3558 5.35523 22.7896C5.12071 22.2233 5 21.6165 5 21.0036C5 19.7659 5.49167 18.5788 6.36683 17.7036C7.242 16.8284 8.42899 16.3367 9.66667 16.3367C10.9043 16.3367 12.0913 16.8284 12.9665 17.7036C13.8417 18.5788 14.3333 19.7659 14.3333 21.0036ZM6.33333 25.9932V30.0521C6.33309 30.2394 6.38844 30.4226 6.49236 30.5785C6.59628 30.7343 6.74411 30.8559 6.91713 30.9277C7.09015 30.9995 7.28058 31.0184 7.46432 30.9819C7.64807 30.9454 7.81686 30.8552 7.94933 30.7228L9.66667 29.0054L11.384 30.7228C11.5165 30.8552 11.6853 30.9454 11.869 30.9819C12.0528 31.0184 12.2432 30.9995 12.4162 30.9277C12.5892 30.8559 12.7371 30.7343 12.841 30.5785C12.9449 30.4226 13.0002 30.2394 13 30.0521V25.9932C12.0133 26.6523 10.8533 27.004 9.66667 27.0039C8.48006 27.004 7.32006 26.6523 6.33333 25.9932Z" fill="currentColor" />
      </svg>

    )
  },
  {
    id: 'questions',
    label: 'FAQ',
    icon: (
      <svg width="34" height="34" viewBox="0 0 34 34" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M10.4 3C9.49826 3 8.63346 3.35821 7.99584 3.99584C7.35821 4.63346 7 5.49826 7 6.4V26.8C7 27.7017 7.35821 28.5665 7.99584 29.2042C8.63346 29.8418 9.49826 30.2 10.4 30.2H26.55C26.7754 30.2 26.9916 30.1104 27.151 29.951C27.3104 29.7916 27.4 29.5754 27.4 29.35C27.4 29.1246 27.3104 28.9084 27.151 28.749C26.9916 28.5896 26.7754 28.5 26.55 28.5H10.4C9.94913 28.5 9.51673 28.3209 9.19792 28.0021C8.87911 27.6833 8.7 27.2509 8.7 26.8H25.7C26.1509 26.8 26.5833 26.6209 26.9021 26.3021C27.2209 25.9833 27.4 25.5509 27.4 25.1V6.4C27.4 5.49826 27.0418 4.63346 26.4042 3.99584C25.7665 3.35821 24.9017 3 24 3H10.4ZM15.092 10.4953C14.8255 10.764 14.668 11.122 14.65 11.5C14.65 11.7254 14.5604 11.9416 14.401 12.101C14.2416 12.2604 14.0254 12.35 13.8 12.35C13.5746 12.35 13.3584 12.2604 13.199 12.101C13.0396 11.9416 12.95 11.7254 12.95 11.5C12.95 10.8795 13.188 10.0227 13.868 9.3172C14.565 8.593 15.653 8.1 17.2 8.1C18.747 8.1 19.835 8.5913 20.532 9.3172C21.212 10.0227 21.45 10.8795 21.45 11.5C21.45 13.2782 20.209 14.1299 19.2791 14.5923C19.0597 14.6997 18.8375 14.8012 18.6127 14.8966L18.594 14.9051C18.4103 14.9825 18.2289 15.0653 18.05 15.1533V16.6C18.0502 16.8254 17.9609 17.0417 17.8016 17.2013C17.6424 17.3609 17.4263 17.4506 17.2009 17.4508C16.9754 17.4511 16.7591 17.3617 16.5996 17.2025C16.44 17.0432 16.3502 16.8271 16.35 16.6017V14.9C16.35 14.4784 16.5676 14.1758 16.7631 13.9905C16.9484 13.8171 17.1711 13.693 17.3496 13.6029C17.523 13.5145 17.7202 13.4295 17.9004 13.353L17.9378 13.336C18.1384 13.2493 18.3322 13.166 18.5209 13.0708C19.291 12.6866 19.75 12.2718 19.75 11.5C19.732 11.122 19.5745 10.764 19.308 10.4953C18.985 10.157 18.373 9.8 17.2 9.8C16.027 9.8 15.415 10.1587 15.092 10.4953ZM17.2 21.7C16.8618 21.7 16.5375 21.5657 16.2984 21.3266C16.0593 21.0875 15.925 20.7632 15.925 20.425C15.925 20.0868 16.0593 19.7625 16.2984 19.5234C16.5375 19.2843 16.8618 19.15 17.2 19.15C17.5382 19.15 17.8625 19.2843 18.1016 19.5234C18.3407 19.7625 18.475 20.0868 18.475 20.425C18.475 20.7632 18.3407 21.0875 18.1016 21.3266C17.8625 21.5657 17.5382 21.7 17.2 21.7Z" fill="currentColor" />
      </svg>

    )
  }
];

const AppSidebar = () => {
  const [activeSection, setActiveSection] = useState('intro');

  // Функция для определения активной секции
  const getActiveSection = () => {
    if (typeof window === 'undefined') return 'intro';

    const sections = navItems.map(item => ({
      id: item.id,
      element: document.getElementById(item.id)
    })).filter(section => section.element);

    if (sections.length === 0) return 'intro';

    const scrollTop = window.scrollY;
    const windowCenter = scrollTop + 100;

    let activeSection = 'intro';
    let minDistance = Infinity;

    sections.forEach(section => {
      if (!section.element) return;

      const rect = section.element.getBoundingClientRect();
      const sectionTop = rect.top + scrollTop;
      const sectionCenter = sectionTop + 100;

      const distance = Math.abs(windowCenter - sectionCenter);

      if (distance < minDistance) {
        minDistance = distance;
        activeSection = section.id;
      }
    });

    return activeSection;
  };

  // Обновляем активную секцию при скролле
  useEffect(() => {
    if (typeof window === 'undefined') return;

    const handleScroll = () => {
      const newActiveSection = getActiveSection();
      setActiveSection(newActiveSection);
    };

    // Добавляем небольшую задержку для оптимизации производительности
    let timeoutId: NodeJS.Timeout;
    let time = Date.now();
    const throttledScroll = () => {
      clearTimeout(timeoutId);
      if (time + 50 < Date.now()) {
        handleScroll();
        time = Date.now();
      } else {
        timeoutId = setTimeout(handleScroll, 50);
      }
    };

    window.addEventListener('scroll', throttledScroll);
    handleScroll(); // Вызываем сразу для установки начального состояния

    return () => {
      window.removeEventListener('scroll', throttledScroll);
      clearTimeout(timeoutId);
    };
  }, []);

  const scrollToSection = (sectionId: string) => {
    const element = document.getElementById(sectionId);
    if (element) {
      element.scrollIntoView({ behavior: 'smooth' });
    }
  };

  return (
    <>
      {/* Боковой навбар */}
      <div className="hidden xl:flex fixed xxl:right-[25px] right-[17px] top-1/2 transform -translate-y-1/2 z-10 ">
        <nav className="flex flex-col items-center border border-solid xxl:border-[#CCCCCC] border-[transparent] rounded-[4px] xxl:bg-[#f5f5f2] ">

          {navItems.map((item, i) => (
            <>
            <hr className={`xxl:w-full w-[28px] bg-[#CCCCCC]  m-0 ${i === 0 ? 'xxl:hidden h-[2px]' : 'h-[1px]'}`} />
            <button
              key={item.id}
              onClick={() => scrollToSection(item.id)}
              className={`group relative flex active:scale-[0.92] items-center justify-center w-[38px] h-[48px] transition-all  ${activeSection === item.id
                ? ''
                : ''
                }`}
            >
              {/* Иконка */}
              <div className={`w-[34px] h-[34px] flex items-center justify-center transition-all group- ${activeSection === item.id
                ? 'text-[#34446D]'
                : 'text-[#93969D]'
                }`}>
                {item.icon}
              </div>

              {/* Подсказка */}
              <div className="overflow-hidden absolute pointer-events-none z-[-1] right-full  text-[#34446D] text-[18px]  whitespace-nowrap">
                <span
                className='group-hover:translate-x-0 translate-x-full transition-all duration-100 block group-hover:mr-3'
                >{item.label}</span>
              </div>
            </button>

            <hr className={`xxl:w-full w-[28px] bg-[#CCCCCC]  m-0 ${i === navItems.length - 1 ? 'xxl:hidden h-[2px]' : 'h-[1px]'}`} />
            </>


          ))}

        </nav>
      </div>
    </>
  );
};

export default AppSidebar;